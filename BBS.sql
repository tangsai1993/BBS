/*
Navicat MySQL Data Transfer

Source Server         : centos7.4压测环境
Source Server Version : 50728
Source Host           : 192.168.168.130:3306
Source Database       : BBS

Target Server Type    : MYSQL
Target Server Version : 50728
File Encoding         : 65001

Date: 2021-12-12 15:52:46
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for app01_article
-- ----------------------------
DROP TABLE IF EXISTS `app01_article`;
CREATE TABLE `app01_article` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL,
  `desc` varchar(255) NOT NULL,
  `create_time` datetime(6) NOT NULL,
  `content` longtext NOT NULL,
  `comment_count` int(11) NOT NULL,
  `up_count` int(11) NOT NULL,
  `down_count` int(11) NOT NULL,
  `category_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `app01_article_category_id_acb2c466_fk_app01_category_nid` (`category_id`),
  KEY `app01_article_user_id_ed7b2a20_fk_app01_userinfo_nid` (`user_id`),
  CONSTRAINT `app01_article_category_id_acb2c466_fk_app01_category_nid` FOREIGN KEY (`category_id`) REFERENCES `app01_category` (`nid`),
  CONSTRAINT `app01_article_user_id_ed7b2a20_fk_app01_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `app01_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_article
-- ----------------------------
INSERT INTO `app01_article` VALUES ('1', '多任务学习中的数据分布问题(一)', '今天这个专题源于我在做分布式多任务学习实验时在选取数据集的时候的疑惑，以下我们讨论多任务学习中(尤其是在分布式的环境下)如何选择数据集和定义任务。多任务学习最初的定义是：\"多任务学习是一种归纳迁移机制，基本目标是提高泛化性能。多任务学习通过相关任务训练信号中的领域特定信息来提高泛化能力，利用共享表示... ...', '2021-09-30 00:37:37.066523', '<div id=\"cnblogs_post_body\" class=\"blogpost-body cnblogs-markdown\">\r\n<p>在<a href=\"https://www.cnblogs.com/BobGo/p/15595133.html\" title=\"多媒体摄像头及相关硬件\" target=\"_blank\">多媒体摄像头及相关硬件</a>文章中，对摄像头的使用方式需要区分应用程序的目标版本以使用不同的代码流程，而与之相比，麦克风硬件的使用就简单多了。</p>\r\n<h3 id=\"麦克风及相关硬件\">麦克风及相关硬件<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<p>麦克风硬件在移动设备上作为音频的采集设备，由于只需要一个收声口，其颜值对用户来说关注度比较低。而且不同的麦克风硬件在性能上差距不大，其应用场景也只是在录制视频时的音频采集，或单独的音频采集，故使用流程和相关操作都比较简单易懂。</p>\r\n<p>只是在目标版本为Android9.0即API 28即以上的系统中，如果应用程序想使用麦克风，必须保持前台运行，或使用前台服务以访问麦克风并采集音频。否则如果应用程序切换到后台，将无法正常使用麦克风采集的数据。</p>\r\n<h4 id=\"权限声明\">权限声明<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<p>首先对麦克风硬件的使用权限进行声明，其权限名及值为<a href=\"https://developer.android.google.cn/reference/android/Manifest.permission#RECORD_AUDIO\" title=\"Manifest.permission.RECORD_AUDIO=&quot;android.permission.RECORD_AUDIO&quot;\" target=\"_blank\">Manifest.permission.RECORD_AUDIO=\"android.permission.RECORD_AUDIO\"</a>。该权限必须在应用程序的清单文件中声明，并且在目标版本为Android6.0即API 23及以上的系统中还需要动态申请该权限，经用户授权后方可启用麦克风。</p>\r\n<h4 id=\"使用流程\">使用流程<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<p>关于麦克风的音频采集流程，与在API 21以下使用摄像头的流程相似。首先<strong>检测</strong>麦克风硬件，在能获取到<code>Context</code>上下文环境对象的位置，调用上下文环境对象的<code>getPackageManager()</code>方法获取<a href=\"https://developer.android.google.cn/reference/android/content/pm/PackageManager\" title=\"android.content.pm.PackageManager\" target=\"_blank\">android.content.pm.PackageManager</a>包管理类的实例化对象，进而通过该对象的<code>hasSystemFeature(String featureName)</code>方法，使参数 <em>featureName</em> 值为<code>PackageManager.FEATURE_MICROPHONE</code> 代表麦克风功能，来判断当前系统是否有麦克风硬件的支持。</p>\r\n<p>对于支持麦克风硬件的设备，在目标版本为<strong>Android9.0即API 28及以上的系统</strong>中，可以获取麦克风硬件的<strong>详细信息</strong>。可以调用上下文环境对象的<code>getSystemService(String name)</code>方法获取系统服务中的音频管理类，该方法的参数 <em>name</em> 值为<code>Context.AUDIO_SERVICE=\\\"audio\\\"</code>，并将返回对象强制转换为<a href=\"https://developer.android.google.cn/reference/android/media/AudioManager\" title=\"android.media.AudioManager\" target=\"_blank\">android.media.AudioManager</a>音频管理类。借助<code>AudioManager</code>音频管理类对象，可以访问音频采集和播放相关的信息。其中，调用该对象的<code>getMicrophones()</code>方法，得到返回的<a href=\"https://developer.android.google.cn/reference/android/media/MicrophoneInfo\" title=\"android.media.MicrophoneInfo\" target=\"_blank\">android.media.MicrophoneInfo</a>类型组成的列表，而这里的<code>MicrophoneInfo</code>麦克风信息类对象，则对应保存了该设备上可使用的每个麦克风信息。</p>\r\n<h5 id=\"音频采集\">音频采集<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h5>\r\n<p>对于麦克风硬件的数据采集，主要用到<a href=\"https://developer.android.google.cn/reference/android/media/MediaRecorder\" title=\"android.media.MediaRecorder\" target=\"_blank\">android.media.MediaRecorder</a>多媒体录制类，该类在<a href=\"https://www.cnblogs.com/BobGo/p/15595133.html\" title=\"多媒体摄像头及相关硬件\" target=\"_blank\">多媒体摄像头及相关硬件</a>中实现视频录制功能时也有使用。这里也将详细说明<code>MediaRecorder</code>多媒体录制类的使用方式。</p>\r\n<p>首先实例化多媒体录制类对象，使用<code>MediaRecorder(Context context)</code>构造方法。该方法的参数 <em>context</em> 即当前使用多媒体录制类的上下文环境对象。</p>\r\n<p>在初始化<code>MediaRecorder</code>多媒体录制类对象后，可以调用该对象的<code>setX</code>系列方法设置相关配置项。<br>\r\n在录制音频时，需要选择音频源。设置音频源可以调用该对象的<code>setAudioSource(int audioSource)</code>方法，其中参数 <em>audioSource</em> 是<code>int</code>类型的标志位，其值通常设置为麦克风的音频源<code>MediaRecorder.AudioSource.MIC=1</code>，另外还可以是适用于通话的麦克风<code>MediaRecorder.AudioSource.VOICE_CALL=4</code>，或者适用于现场直播的麦克风<code>MediaRecorder.AudioSource.VOICE_PERFORMANCE=10</code>等。<br>\r\n在录制音频时，麦克风采集的音频通常需要编码输出，设置编码格式可以调用该对象的<code>setAudioEncoder(int audio_encoder)</code>方法，其参数 <em>audio_encoder</em> 同样是<code>int</code>类型的标志位，其值可以是AMR NB格式的<code>MediaRecorder.AudioEncoder.AMR_NB=1</code>，AMR WB格式的<code>MediaRecorder.AudioEncoder.AMR_WB=2</code>，AAC LC格式的<code>MediaRecorder.AudioEncoder.AAC=3</code>，OGG格式的<code>MediaRecorder.AudioEncoder.VORBIS=6</code>，OPUS格式的<code>MediaRecorder.AudioEncoder.OPUS=7</code>等。<br>\r\n在录制音频后，可以将数据输出到文件中，设置输出音频文件可以调用该对象的<code>setOutputFile(String path)</code>方法，其参数 <em>path</em> 指定了输出文件的绝对路径。<br>\r\n在输出文件时同样要设置输出格式，调用该对象的<code>setOutputFormat(int output_format)</code>方法，其参数 <em>output_format</em> 同样是<code>int</code>类型的标志位，与音频编码格式对应，其值可以调用<code>MediaRecorder.OutputFormat</code>静态类的相关常量。</p>\r\n<p>在<code>MediaRecorder</code>对象设置完相关准备工作后，可以调用该对象的<code>prepare()</code>方法，获取相关硬件，准备开始采集音频数据。<br>\r\n而调用<code>MediaRecorder</code>对象的<code>start()</code>方法，则开始启动采集音频，并将数据输出到指定的文件中。</p>\r\n<p>录制音频过程中，可以调用<code>MediaRecorder</code>对象的<code>pause()</code>方法暂停录制，数据将会暂停输出到指定文件。<br>\r\n如果想再次继续录制音频并将数据输出到文件，可以调用<code>MediaRecorder</code>对象的<code>resume()</code>方法继续录制。</p>\r\n<p>最终，需要停止采集音频，调用<code>MediaRecorder</code>对象的<code>stop()</code>方法停止录制，数据将停止输出到指定文件，并关闭对指定文件的使用状态。</p>\r\n<p>在停止录制后，必须调用<code>MediaRecorder</code>对象的<code>release()</code>方法，释放当前多媒体录制类所占用的资源，包括对麦克风的占用状态等。</p>\r\n<blockquote>\r\n<p>使用麦克风的音频采集功能，还可以通过<a href=\"https://developer.android.google.cn/reference/android/media/AudioRecord\" title=\"android.media.AudioRecord\" target=\"_blank\">android.media.AudioRecord</a>音频录制类实现。而且<code>MediaRecorder</code>多媒体录制类中关于音频录制的功能，在底层同样是通过<code>AudioRecorder</code>音频录制类实现的，所以初级阶段掌握<code>MediaRecorder</code>多媒体录制类的相关使用将会更加实用。</p>\r\n</blockquote>\r\n\r\n</div>', '12', '2', '1', '1', '1');
INSERT INTO `app01_article` VALUES ('2', 'Yarp 让系统内调度更灵活', '简介 Yarp 是微软团队开发的一个反向代理组件， 除了常规的 http 和 https 转换通讯，它最大的特点是可定制化，很容易根据特定场景开发出需要的定制代理通道。 详细介绍：https://devblogs.microsoft.com/dotnet/announcing-yarp-1-0-re ...', '2021-11-30 00:38:14.334478', '<div id=\"cnblogs_post_body\" class=\"blogpost-body blogpost-body-html\">\r\n<h2>一，引言<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h2>\r\n<p>　　在介绍 Azure Key Vault 之前，先简单介绍一下 HSM（硬件安全模块）。</p>\r\n<p>-------------------- 我是分割线 --------------------</p>\r\n<p>1，什么是硬件安全模块（HSM）？</p>\r\n<p>硬件安全模块 是一种物理计算社保，可以用来保护和管理我们的数字密钥，用于保护和管理数字密钥。同样的，与其他硬件产品一样，当我们需要的时候，都需要进行采购，安装，升级，维护，都会设计到费用问题和时间损耗问题。同时，它提供相关密码学操作的计算机硬件设备。硬件安全模块一般通过扩展卡或外部设备的形式直接连接到电脑或网络服务器。</p>\r\n<p>-------------------- 我是分割线 --------------------</p>\r\n<h3><a href=\"https://www.cnblogs.com/AllenMaster/p/13826073.html\" target=\"_blank\">1，Azure Kay Vault（一）.NET Core Console App 获取密钥保管库中的机密信息</a><button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<h3><a href=\"https://www.cnblogs.com/AllenMaster/p/15655800.html\" target=\"_blank\">2，Azure Key Vault（二）- 入门简介</a><button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<p>这个时候就体现出 Key Vault 的优势了，Azure Key Vault 提供了和 HSM 一样的数据保护的安全机制，同时作为一项 Azure 服务，无需我们进行维护和升级，</p>\r\n<h2>二，正文<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h2>\r\n<h3>1，Azure Key Vault 的用途<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<p><span><span>Azure Key Vault 中存储的任何内容都使用行业标准算法、HSM 和密钥长度进行保护。</span><span>HSM 已通过联邦信息处理标准 (FIPS) 的 2 级验证。</span><span>Microsoft 提供了可以安全访问 HSM 设备的界面。</span><span>为了更加确保密钥的完整性，您可以在 HSM 中生成它。</span><span>Microsoft 无法访问或提取您的密钥。</span><span>应用程序也无法直接访问密钥。</span><span>相反，您必须使用 Azure CLI、Portal 或 PowerShell 作为接口。</span></span><br><span><span>Azure Key Vault 可用于密钥管理，因为它可以轻松创建和控制用于加密密钥的加密密钥。</span><span>它还可以用于证书管理，使您能够轻松配置、管理和部署安全套接字层/传输层安全性 (SSL/TLS)。</span></span><br><span>Azure Key Vault 支持三种类型的数据，包括：</span></p>\r\n<p>1）Secrets：这些是 25KB 或更小的值。它们被写入和读取，并可用于存储密码、访问密钥或 SQL 连接字符串。</p>\r\n<p>2）Keys：这些将写入密钥保管库，但无法导出。它们用于加密和哈希生成。即使使用密钥，也可以将其配置为不离开 HSM，而是将所需的密码操作发送到密钥保管库服务并返回结果。</p>\r\n<p>3）Data：敏感信息也可以存储在 Azure Key Vault 中。</p>\r\n<p><span>当应用程序机密集中存储在 Azure Key Vault 中时，可以更轻松地控制其分发。</span><span>应用程序开发人员不再需要在他们的应用程序中存储安全信息，因此他们不再需要将此信息作为代码的一部分。</span></p>\r\n<h3><span>2，它是如何进行工作的？</span><button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<p><span><span><span>访问密钥保管库需要适当的身份验证和授权，然后调用方（用户或应用程序）才能获得访问权限。</span><span>身份验证确定调用者的身份，而授权确定允许他们执行的操作。</span></span><br><span><span>Azure Key Vault 还允许您隔离应用程序机密。</span><span>您可以将应用程序访问限制在您允许的保管库；</span></span></span></p>\r\n<ul>\r\n<li><span>对于密钥：创建、导入、获取、列出、备份、还原、删除、更新、签名、验证、包装、解包、加密和解密 等</span></li>\r\n<li style=\"box-sizing: border-box\"><span style=\"box-sizing: border-box; vertical-align: inherit\">对于秘密：创建、更新、获取、列出、删除 等</span></li>\r\n<li style=\"box-sizing: border-box\"><span style=\"box-sizing: border-box; vertical-align: inherit\">对于证书：创建、更新策略、联系人、导入、更新、更新 等</span></li>\r\n\r\n\r\n\r\n\r\n</ul>\r\n<p>如下图所示</p>\r\n<p><img src=\"https://img2020.cnblogs.com/blog/1996262/202112/1996262-20211207203122201-1965063878.png\" alt=\"\" loading=\"lazy\" class=\"medium-zoom-image\"></p>\r\n<h3><span style=\"box-sizing: border-box; vertical-align: inherit\">3，</span><span style=\"box-sizing: border-box; vertical-align: inherit\">Azure Key Vault 是如何<span style=\"font-size: 14px\">管理的</span></span><button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<p><span style=\"box-sizing: border-box; vertical-align: inherit; font-size: 14px\"><span style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; vertical-align: inherit\">Azure Key Vault 允许通过 REST、CLI、PowerShell 和 Azure 资源管理器进行 Key Vault 管理。</span><span style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; vertical-align: inherit\">添加到 Azure Key Vault 的所有密钥和机密都有自己的 URL。</span><span style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; vertical-align: inherit\">应用程序可以使用 URL 访问它们需要的密钥，因此无需编写代码来保护机密信息。</span><span style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; vertical-align: inherit\">Key Vault 还具有日志记录功能。</span><span style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; vertical-align: inherit\">这使得可以监视何时以及谁访问了 Key Vault 的内容。</span><span style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; vertical-align: inherit\">访问日志保存在 Azure 存储帐户中。</span></span></p>\r\n<p><span style=\"box-sizing: border-box; vertical-align: inherit\"><span style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; font-size: 16px; vertical-align: inherit\"><img src=\"https://img2020.cnblogs.com/blog/1996262/202112/1996262-20211207202413999-1519934436.png\" alt=\"\" loading=\"lazy\" class=\"medium-zoom-image\"></span></span></p>\r\n<ul style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; font-size: 16px\">\r\n<li style=\"box-sizing: border-box\"><span style=\"box-sizing: border-box; vertical-align: inherit; font-size: 14px\">它可以在需要时快速扩展。</span></li>\r\n<li style=\"box-sizing: border-box\"><span style=\"box-sizing: border-box; vertical-align: inherit; font-size: 14px\">您可以将 Key Vault 的内容在一个区域内复制到另一个区域以提高可用性。</span></li>\r\n<li style=\"box-sizing: border-box\"><span style=\"box-sizing: border-box; vertical-align: inherit; font-size: 14px\">可以通过门户、Azure CLI 和 PowerShell 轻松访问它。</span></li>\r\n<li style=\"box-sizing: border-box\"><span style=\"box-sizing: border-box; vertical-align: inherit; font-size: 14px\">一些与证书相关的任务可以自动化。</span></li>\r\n\r\n\r\n\r\n\r\n</ul>\r\n<h2>三，结尾<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h2>\r\n<p><span style=\"box-sizing: border-box; color: rgba(33, 33, 33, 1); font-family: &quot;open sans&quot;, sans-serif; font-size: 14px; vertical-align: inherit\"><span style=\"box-sizing: border-box; vertical-align: inherit\">　　Key Vault 的</span><span style=\"box-sizing: border-box; vertical-align: inherit\">集成</span><span style=\"box-sizing: border-box; vertical-align: inherit\">可用于简化 Azure 数据加密，这是 Azure SQL 数据库中始终加密的功能。</span><span style=\"box-sizing: border-box; vertical-align: inherit\">Key Vault 还可以与存储帐户、日志分析和事件中心集成。本文所分享的内容也存在着很多我自己的一些理解，有理解不到位的，还包含，并且指出不足之处！！！！！</span></span></p>\r\n<p><span style=\"font-size: 14px\">作者：<a href=\"https://www.cnblogs.com/AllenMaster\" target=\"_blank\">Allen</a>&nbsp;</span></p>\r\n<p>版权：转载请在文章明显位置注明作者及出处。如发现错误，欢迎批评指正。</p>\r\n</div>', '1', '0', '0', '2', '1');
INSERT INTO `app01_article` VALUES ('3', 'Qt Creator 源码学习笔记03，大型项目如何管理工程', '阅读本文大概需要 6 分钟 一个项目随着功能开发越来越多，项目必然越来越大，工程管理成本也越来越高，后期维护成本更高。如何更好的组织管理工程，是非常重要的 今天我们来学习下 Qt Creator 是如何组织管理这么庞大的一个项目工程的 QMake 多工程管理方法 我们知道 Qt 采用 qmake语法 ...', '2021-08-11 00:39:03.000000', '<div id=\"cnblogs_post_body\" class=\"blogpost-body cnblogs-markdown\">\r\n<blockquote>\r\n<p>摘要</p>\r\n<p>基础数据的运算可以直接使用四则运算符。在 Swift 中也可以通过重写四则运算符的方式，让 <code>struct</code> 或者 <code>class</code> 创建的结构体或者对象也能像基础数据那样直接使用四则运算符。</p>\r\n</blockquote>\r\n<p>Swift 中有经常用到<strong>加、减、乘、除</strong>的操作，在代码中编写这些操作，实现功能中需要的基础计算。比如下面代码中实现的加法操作。</p>\r\n<pre highlighted=\"true\"><code class=\"language-swift hljs\"><span class=\"hljs-keyword\">let</span> a = <span class=\"hljs-number\">1</span>\r\n<span class=\"hljs-keyword\">let</span> b = <span class=\"hljs-number\">2</span>\r\n<span class=\"hljs-keyword\">let</span> <span class=\"hljs-built_in\">c</span> = a + b\r\n<span class=\"hljs-comment\">// c = 3</span>\r\n</code></pre>\r\n<p>当遇到 <code>struct</code> 或者 <code>class</code> 中的变量做计算操作时，一般都是把属性依次拿出来计算，比如两个 <code>CGPoint</code> 的对象相加：</p>\r\n<pre highlighted=\"true\"><code class=\"language-swift hljs\"><span class=\"hljs-keyword\">let</span> point1 = <span class=\"hljs-type\">CGPoint</span>(x: <span class=\"hljs-number\">1</span>, y: <span class=\"hljs-number\">2</span>)\r\n<span class=\"hljs-keyword\">let</span> point2 = <span class=\"hljs-type\">CGPoint</span>(x: <span class=\"hljs-number\">3</span>, y: <span class=\"hljs-number\">4</span>)\r\n\r\n<span class=\"hljs-comment\">// point1 加 point2</span>\r\n<span class=\"hljs-keyword\">let</span> x = point1.x + point2.x\r\n<span class=\"hljs-keyword\">let</span> y = point1.y + point2.y\r\n<span class=\"hljs-keyword\">let</span> result = <span class=\"hljs-type\">CGPoint</span>(x: x, y: y)\r\n</code></pre>\r\n<p>看代码里面，两个 point 相加要先得到 x 的和，y 的和，然后再创建新的坐标，生成新的坐标。</p>\r\n<p>逻辑上是没有问题的，如果多个地方出现这样的<strong>相加</strong>操作，就想到把<strong>相加</strong>操作给封装成一个函数：</p>\r\n<pre highlighted=\"true\"><code class=\"language-swift hljs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">addFunc</span><span class=\"hljs-params\">(with point1: CGPoint, point2: CGPoint)</span></span> -&gt; <span class=\"hljs-type\">CGPoint</span> {\r\n\r\n    <span class=\"hljs-keyword\">let</span> x = point1.x + point2.x\r\n    <span class=\"hljs-keyword\">let</span> y = point1.y + point2.y\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">CGPoint</span>(x: x, y: y)\r\n}\r\n</code></pre>\r\n<p>之后两个坐标的<strong>相加</strong>操作就可以直接调用 <code>addFunc</code> 函数：</p>\r\n<pre highlighted=\"true\"><code class=\"language-swift hljs\"><span class=\"hljs-keyword\">let</span> result = addFunc(with point1, point2)\r\n</code></pre>\r\n<p>这是常规的封装处理，没有毛病，就是有没有更加好的封装方式？比如直接用 <strong>+</strong> 这个操作呢？</p>\r\n<p>Swift 中恰好有<strong>重写运算符</strong>的方式，直接在 <code>struct</code> 或者 <code>class</code> 上使用<strong>加、减、乘、除</strong>这些操作。那么如何<strong>重写运算符呢</strong>？</p>\r\n<p>这里依旧以相加两个坐标为例，重写加运算符：</p>\r\n<pre highlighted=\"true\"><code class=\"language-swift hljs\"><span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> + <span class=\"hljs-params\">(<span class=\"hljs-number\">_</span> point1: CGPoint, <span class=\"hljs-number\">_</span> point2: CGPoint)</span></span> -&gt; <span class=\"hljs-type\">CGPoint</span> {\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">CGPoint</span>(x: point1.x + point2.x, y: point1.y + point2.y)\r\n}\r\n</code></pre>\r\n<p>代码中的重写格式一定要是 <code>static func +(属性...)</code>。在函数体中的处理就按照正常的四则运算规则处理。</p>\r\n<p>之后处理两个坐标相加时，就可以像最开始代码中的那样直接用 <strong>+</strong> 运算。</p>\r\n<pre highlighted=\"true\"><code class=\"language-swift hljs\"><span class=\"hljs-keyword\">let</span> result = point1 + point2\r\n</code></pre>\r\n<p>其他的<strong>减、乘、除</strong>等运算也可以依照这样的重写格式去处理。</p>\r\n<h3 id=\"进阶\">进阶<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<p>坐标是 <code>CGPoint</code> 结构体的，所以和坐标相关的重写的运算符可以写在 <code>CGPoint</code> 的 <code>extension</code> 中，避免重写方法影响到系统级别的运算符</p>\r\n<pre highlighted=\"true\"><code class=\"language-swift hljs\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">extension</span> <span class=\"hljs-title\">CGPoint</span> </span>{\r\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> + <span class=\"hljs-params\">(<span class=\"hljs-number\">_</span> point1: CGPoint, <span class=\"hljs-number\">_</span> point2: CGPoint)</span></span> -&gt; <span class=\"hljs-type\">CGPoint</span> {\r\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">CGPoint</span>(x: point1.x + point2.x, y: point1.y + point2.y)\r\n  }\r\n}\r\n</code></pre>\r\n<p>这里再实现 <code>+=</code> 运算符，说明结构体自身运算后仍赋值到自身的场景，用到的是 <code>inout</code> 修饰。</p>\r\n<pre highlighted=\"true\"><code class=\"language-swift hljs\"><span class=\"hljs-keyword\">static</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> += <span class=\"hljs-params\">(point1: <span class=\"hljs-keyword\">inout</span> CGPoint, <span class=\"hljs-number\">_</span> point2: CGPoint)</span></span> {\r\n    point1.x += point2.x\r\n    point1.y += point2.y\r\n}\r\n</code></pre>\r\n<p>使用上和基础数据的 <code>+=</code> 方式也是一样的。</p>\r\n<h2 id=\"题外话\">题外话<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h2>\r\n<p>时间仓促，说的东西可能不全面，在你查看的过程中遇到什么问题，评论区给我留言，我会尽快回复</p>\r\n\r\n</div>', '3', '0', '0', '1', '1');
INSERT INTO `app01_article` VALUES ('4', 'python之元编程', '一、什么是元编程 元编程是一种编写计算机程序的技术，这些程序可以将自己看作数据，因此你可以在运行时对它进行内省、生成和/或修改。 Python在语言层面对函数、类等基本类型提供了内省及实时创建和修改的能力；我们可以使用装饰器向现有的函数、方法或类添加附加功能；同时我们也可以通过修改一些特殊的方法来变 ...', '2021-11-30 00:45:22.425673', '<div id=\"cnblogs_post_body\" class=\"blogpost-body cnblogs-markdown\">\r\n<h2 id=\"vue-学习\">Vue 学习<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h2>\r\n<h3 id=\"vue-基础\">vue 基础<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<p>一套用于构建用户界面的渐进式 JavaScript 框架<br>\r\n渐进式：Vue 可以自底向上逐层的应用<br>\r\n简单应用：只需要一个轻量小巧的核心库<br>\r\n复杂应用：可以引入各式各样的 Vue 插件<br>\r\n特点： 1. 采用组件化模式，提高代码复用率、且让代码更好维护。 2. 声明式编码，让编码人员无需直接操作 DOM，提高开发效率。 与之相对立的是命令式编码 3. 使用虚拟 DOM+优秀的 Diff 算法，尽量复用 DOM 节点。 4. ES6 语法规范<br>\r\nES6 模块化<br>\r\n包管理器：npm、yarn<br>\r\n原型、原型链<br>\r\n数组常用方法<br>\r\naxios<br>\r\npromise</p>\r\n<h3 id=\"教程\">教程<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<h4 id=\"初识-vue\">初识 Vue<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<pre highlighted=\"true\"><div class=\"copy-btns\">复制代码</div><ul class=\"awes-linenumber\"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li></ul><div class=\"awes-lang\">yaml</div><code class=\"hljs yaml\"><span class=\"hljs-number\">1</span><span class=\"hljs-string\">.想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</span>\r\n<span class=\"hljs-number\">2.</span><span class=\"hljs-string\">root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法；</span>\r\n<span class=\"hljs-number\">3.</span><span class=\"hljs-string\">root容器里面的代码被称为【Vue模板】；</span>\r\n<span class=\"hljs-number\">4.</span><span class=\"hljs-string\">Vue实例和容器是一一对应的；</span>\r\n<span class=\"hljs-number\">5</span><span class=\"hljs-string\">.真实开发中只有一个Vue实例，并且会配合着组件一起使用；</span>\r\n<span class=\"hljs-number\">6</span><span class=\"hljs-string\">.{{xxx}}中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性</span>\r\n<span class=\"hljs-number\">7</span><span class=\"hljs-string\">.一旦data中的数据发生改变，那么页面中用到该数据的地方也会自动更新；</span>\r\n</code></pre>\r\n<p>js 表达式：一个表达式会生成一个值，可以放在任何一个需要值的地方<br>\r\n(1) a<br>\r\n(2) a+b<br>\r\n(3) demo(1)<br>\r\njs 代码：<br>\r\n(1) if(){}<br>\r\n(2) for(){}</p>\r\n<h4 id=\"模板语法\">模板语法<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<pre highlighted=\"true\"><div class=\"copy-btns\">复制代码</div><ul class=\"awes-linenumber\"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li><li>6</li><li>7</li><li>8</li><li>9</li><li>10</li><li>11</li><li>12</li><li>13</li><li>14</li><li>15</li><li>16</li><li>17</li></ul><div class=\"awes-lang\">haskell</div><code class=\"hljs haskell\">``` js\r\n// 创建<span class=\"hljs-type\">Vue</span>实例\r\n   new <span class=\"hljs-type\">Vue</span>({\r\n     el: <span class=\"hljs-string\">\"#root\"</span>, // el用于指定当前<span class=\"hljs-type\">Vue</span>实例为哪个容器服务，值通常为css选择器字符串\r\n     <span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>: {\r\n       // <span class=\"hljs-title\">data</span>中用于存储数据，数据供<span class=\"hljs-title\">el</span>所指定的容器去使用，值我们暂时先写成一个对象。\r\n       <span class=\"hljs-title\">name</span>: \"<span class=\"hljs-type\">EDG</span> <span class=\"hljs-type\">FANS</span>\"\r\n     },</span>\r\n   });\r\n```\r\n <span class=\"hljs-type\">Vue</span>模板语法有<span class=\"hljs-number\">2</span>大类：\r\n  <span class=\"hljs-number\">1.</span>插值语法：\r\n   功能：用于解析标签体内容。\r\n   写法：{{xxx}}，xxx是js表达式，且可以直接读取到<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>中的所有属性。</span>\r\n  <span class=\"hljs-number\">2.</span>指令语法\r\n   功能：用于解析标签（包裹：标签属性、标签体内容、绑定事件…）\r\n   举例：v-bind:href=<span class=\"hljs-string\">\"xxx\"</span>或者简写为 :href=<span class=\"hljs-string\">\"xxx\"</span>，xxx同样要写js表达式，且可以直接读取到<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span>中的所有属性。</span>\r\n</code></pre>\r\n<h4 id=\"数据绑定\">数据绑定<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<pre highlighted=\"true\"><div class=\"copy-btns\">复制代码</div><ul class=\"awes-linenumber\"><li>1</li><li>2</li><li>3</li><li>4</li><li>5</li></ul><div class=\"awes-lang\">sql</div><code class=\"hljs sql\"> Vue中有两种数据绑定的方式\r\n           1.单向绑定(v-bind)：数据只能从data流向页面\r\n           2.双向绑定(v-model)：数据不进能从data流向页面，还可以从页面流向data。\r\n             备注：\r\n                 1.双向绑定一般都应用在表单类元素上（如：inpout、<span class=\"hljs-keyword\">select</span>等）\r\n                 <span class=\"hljs-number\">2.</span>v-<span class=\"hljs-keyword\">model</span>:<span class=\"hljs-keyword\">value</span>可以简写v-<span class=\"hljs-keyword\">model</span>，因为v-<span class=\"hljs-keyword\">model</span>默认收集的就是<span class=\"hljs-keyword\">value</span>值。</code></pre>\r\n\r\n</div>', '0', '1', '0', '3', '3');
INSERT INTO `app01_article` VALUES ('5', 'Go语言核心36讲（Go语言实战与应用十七）--学习笔记', '39 | bytes包与字节串操作（下） 在上一篇文章中，我们分享了bytes.Buffer中已读计数的大致功用，并围绕着这个问题做了解析，下面我们来进行相关的知识扩展。 知识扩展 问题 1：bytes.Buffer的扩容策略是怎样的？ Buffer值既可以被手动扩容，也可以进行自动扩容。并且，这两 ...', '2021-11-30 00:45:58.178542', '<div id=\"cnblogs_post_body\" class=\"blogpost-body cnblogs-markdown\">\r\n<h2 id=\"bh0\">写在前面<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h2>\r\n<p>  此系列是本人一个字一个字码出来的，包括示例和实验截图。<strong>可能有错误或者不全面的地方，如有错误，欢迎批评指正，本教程将会长期更新。</strong> 如有好的建议，欢迎反馈。码字不易，如果本篇文章有帮助你的，如有闲钱，可以打赏支持我的创作。如想转载，请把我的转载信息附在文章后面，并声明我的个人信息和本人博客地址即可，但<strong>必须事先通知我</strong>。</p>\r\n<blockquote>\r\n<p>你如果是从中间插过来看的，请仔细阅读 <strong><a href=\"https://www.cnblogs.com/wingsummer/p/15569827.html\" target=\"_blank\">羽夏逆向指引——序</a></strong> ，方便学习本教程。</p>\r\n</blockquote>\r\n<h1 id=\"bh1\">补丁是什么<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h1>\r\n<p>  对于我们老一辈的长辈，补丁是在日常生活中最常见的东西，裤子或者衣服破了一个洞，如果比较大，就会找一块布，然后缝在上面，这就是所谓的打补丁。对于计算机程序来说，补丁的作用好比衣物上的补丁，用来修补程序在代码逻辑上的漏洞。不过对于破解人员来说，补丁就是所谓的通过修改二进制数据以实现自己绕过正版检测的文件。在之前的教程，我们就见识到了所谓的补丁了，它是一个普通的补丁，直接写到可执行文件当中。补丁有好几种常见的类型，比如内存补丁、劫持补丁、硬件断点补丁等等，它们虽然形式各异，本质特征就是更改程序的执行流程，原理都是一样的，下面将对常见的补丁进行讲解。</p>\r\n<h1 id=\"bh2\">文件补丁<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h1>\r\n<p>  这种补丁应该比较常见，比如网上常见的替换<code>exe</code>/<code>dll</code>文件以及添加伪造正版信息文件实现破解就是所谓的文件补丁。在之前的教程 <strong>羽夏逆向指引——破解第一个程序</strong> 当中，我们在<code>X32Dbg</code>中修改汇编指令，然后另存为可执行文件，重新生成的<code>exe</code>就是文件补丁。对于这类补丁，我就不再赘述了。</p>\r\n<h1 id=\"bh3\">劫持补丁<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h1>\r\n<p>  什么是劫持补丁呢？它用到了所谓的<code>DLL</code>劫持技术。当一个可执行文件运行时，<code>Windows</code>加载器将可执行模块映射到进程的地址空间中，加载器分析可执行模块的输入表，并设法找出任何需要的<code>DLL</code>，并将它们映射到进程的地址空间中。由于输入表中只包含<code>DLL</code>名而没有它的路径名，因此加载程序必须在磁盘上搜索<code>DLL</code>文件。首先会尝试从当前程序所在的目录加载<code>DLL</code>，如果没找到，则在<code>Windows</code>系统目录中查找，最后是在环境变量中列出的各个目录下查找。利用这个特点，先伪造一个系统同名的<code>DLL</code>，提供同样的输出表，每个输出函数转向真正的系统<code>DLL</code>。程序调用系统<code>DLL</code>时会先调用当前目录下伪造的<code>DLL</code>，完成相关功能后，再跳到系统<code>DLL</code>同名函数里执行。这个过程用个形象的词来描述就是系统<code>DLL</code>被劫持了。<br>\r\n  如果看不懂这些东西的，证明你缺少<code>PE</code>结构的知识，请自行学习，学会后再继续。<br>\r\n  但是仅仅通过劫持，我们还需要配合其他技术来实现补丁的功能，之后讲解完本篇文章后，我们将使用劫持，配合其他手段，实现一个劫持补丁。</p>\r\n<h1 id=\"bh4\">内存补丁<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h1>\r\n<p>  什么是内存补丁呢？如果使用某阁的破解工具你或许能有所耳闻。它有一个程序会引导启动真正的程序，不过会处于挂起状态，打好补丁后，然后放开程序运行。下面我们拿之前使用的程序开刀，实现一个内存补丁。<br>\r\n  那么首先考虑，在<code>Windows</code>平台如何创建程序？创建进程的<code>API</code>还是挺多的，我们用<code>CreateProcess</code>来实现：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"BOOL CreateProcess(\r\n    LPCTSTR lpApplicationName,\r\n    LPTSTR lpCommandLine,\r\n    LPSECURITY_ATTRIBUTES lpProcessAttributes,\r\n    LPSECURITY_ATTRIBUTES lpThreadAttributes,\r\n    BOOL bInheritHandles,\r\n    DWORD dwCreationFlags,\r\n    LPVOID lpEnvironment,\r\n    LPCTSTR lpCurrentDirectory,\r\n    LPSTARTUPINFO lpStartupInfo,\r\n    LPPROCESS_INFORMATION lpProcessInformation\r\n);\r\n\">复制</span><code class=\"language-cpp\">BOOL <span class=\"token function\">CreateProcess</span><span class=\"token punctuation\">(</span>\r\n    LPCTSTR lpApplicationName<span class=\"token punctuation\">,</span>\r\n    LPTSTR lpCommandLine<span class=\"token punctuation\">,</span>\r\n    LPSECURITY_ATTRIBUTES lpProcessAttributes<span class=\"token punctuation\">,</span>\r\n    LPSECURITY_ATTRIBUTES lpThreadAttributes<span class=\"token punctuation\">,</span>\r\n    BOOL bInheritHandles<span class=\"token punctuation\">,</span>\r\n    DWORD dwCreationFlags<span class=\"token punctuation\">,</span>\r\n    LPVOID lpEnvironment<span class=\"token punctuation\">,</span>\r\n    LPCTSTR lpCurrentDirectory<span class=\"token punctuation\">,</span>\r\n    LPSTARTUPINFO lpStartupInfo<span class=\"token punctuation\">,</span>\r\n    LPPROCESS_INFORMATION lpProcessInformation\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  看到这个函数，是不是感觉非常头大，不过没关系，里面很多参数都是填<code>NULL</code>的，意为使用系统默认值，代码如下：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"WCHAR filename[] = L&quot;E:\\\\ConsoleApplication1.exe&quot;;\r\nSTARTUPINFO si = {sizeof(si)};\r\nPROCESS_INFORMATION pi;\r\nBOOL ret =  CreateProcess(NULL, filename, NULL, NULL,  FALSE, CREATE_SUSPENDED, NULL, NULL, &amp;si, &amp;pi);\r\n\">复制</span><code class=\"language-cpp\">WCHAR filename<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"E:\\\\ConsoleApplication1.exe\"</span><span class=\"token punctuation\">;</span>\r\nSTARTUPINFO si <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>si<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\nPROCESS_INFORMATION pi<span class=\"token punctuation\">;</span>\r\nBOOL ret <span class=\"token operator\">=</span>  <span class=\"token function\">CreateProcess</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>  FALSE<span class=\"token punctuation\">,</span> CREATE_SUSPENDED<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>si<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  这个函数的具体细节可以自行搜索学习，不要指望一个指引就讲明白所有的细节。有些细节甚至你研究明白<code>Windows</code>的系统内核你才能明白的，正应正了我的座右铭：IT深似海，一入出不来。<br>\r\n  好，闲话不多说了。代码中的<code>filename</code>不能这么初始化：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"LPWSTR filename = (LPWSTR)L&quot;E:\\\\ConsoleApplicatio1.exe&quot;;\r\n\">复制</span><code class=\"language-cpp\">LPWSTR filename <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>LPWSTR<span class=\"token punctuation\">)</span>L<span class=\"token string\">\"E:\\\\ConsoleApplicatio1.exe\"</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>  如果这样声明，这个就会放到常量区，而<code>CreateProcess</code>使用这个数组时会进行一些操作，如果只读，就会触发异常。<br>\r\n  <code>CreateProcess</code>这个函数若返回非零，那么创建函数成功。下面我们将写补丁，那么用到哪个<code>API</code>呢？<br>\r\n  写补丁的话，我们需要用到<code>WriteProcessMemory</code>这个函数：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"BOOL WriteProcessMemory(\r\n    HANDLE hProcess,\r\n    LPVOID lpBaseAddress,\r\n    LPVOID lpBuffer,\r\n    DWORD nSize,\r\n    LPDWORD lpNumberOfBytesWritten\r\n);\r\n\">复制</span><code class=\"language-cpp\">BOOL <span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span>\r\n    HANDLE hProcess<span class=\"token punctuation\">,</span>\r\n    LPVOID lpBaseAddress<span class=\"token punctuation\">,</span>\r\n    LPVOID lpBuffer<span class=\"token punctuation\">,</span>\r\n    DWORD nSize<span class=\"token punctuation\">,</span>\r\n    LPDWORD lpNumberOfBytesWritten\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  第一个参数就是你要写进程的句柄，那么什么是句柄，如果真的要研究明白需要学习系统内核的知识。这里仅简单描述一下：句柄类似一个编号，比如你要找一个人，这个人很神秘，隐姓埋名，只留下这个编号，但你知道在哪个组织去找，你拿这个编号让内部人员给传个话，内部人员就帮你做了这个事情。<br>\r\n  第二个参数是要写的地址。如果这个东西不懂的话，请重新学习汇编的相关知识。<br>\r\n  第三个参数就是存储要写内容的地址，第四个参数是要写入的大小，最后一个是成功写入的字节数，填<code>NULL</code>表示不想知道。好，开始写代码：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"unsigned short buffer = 0x9090;\r\nif (ret)\r\n{\r\n    if (WriteProcessMemory(pi.hProcess, (LPVOID)0x401721,   buffer, sizeof(buffer), NULL))\r\n    {\r\n        cout << &quot;写入补丁成功！&quot; << endl;\r\n    }\r\n}\r\n\">复制</span><code class=\"language-cpp\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> buffer <span class=\"token operator\">=</span> <span class=\"token number\">0x9090</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token number\">0x401721</span><span class=\"token punctuation\">,</span>   buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"写入补丁成功！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  为什么是写这个补丁，长度为什么是这个长度，不会请返回学习硬编码的知识。<br>\r\n  补丁写好了，但程序创建的时候是挂起的状态，我们需要恢复执行的状态程序才能跑起来，我们需要用到下面的<code>API</code>：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"DWORD WINAPI ResumeThread(_In_ HANDLE hThread);\r\n\">复制</span><code class=\"language-cpp\">DWORD WINAPI <span class=\"token function\">ResumeThread</span><span class=\"token punctuation\">(</span>_In_ HANDLE hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>  填入的参数就是线程的句柄，所以我们应该这么写：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"ResumeThread(pi.hThread);\r\n\">复制</span><code class=\"language-cpp\"><span class=\"token function\">ResumeThread</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\r\n<p>  不过需要注意的是，前面我们创建进程的时候，会产生两个句柄：一个是进程句柄，另一个是线程句柄。我们需要调用<code>CloseHandle</code>函数销毁，防止占用系统资源：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"CloseHandle(pi.hProcess);\r\nCloseHandle(pi.hThread);\r\n\">复制</span><code class=\"language-cpp\"><span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\r\n<p>  到现在为止，代码就长成下面的样子：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"#include <iostream>\r\n#include <Windows.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    WCHAR filename[] = L&quot;E:\\\\ConsoleApplication1 exe&quot;;    \r\n    STARTUPINFO si = {sizeof(si)};\r\n    PROCESS_INFORMATION pi; \r\n    BOOL ret = CreateProcess(NULL, filename, NULL, NULL, FALSE, CREATE_NEW_CONSOLE | CREATE_SUSPENDED, NULL, NULL, &amp;si, &amp;pi);\r\n    unsigned short buffer = 0x9090;\r\n    if (ret)\r\n    {\r\n        if (WriteProcessMemory(pi.hProcess, (LPVOID 0x401721, &amp;buffer, sizeof(buffer), NULL))\r\n        {\r\n            cout << &quot;写入补丁成功！&quot; << endl;\r\n        }\r\n    }\r\n    ResumeThread(pi.hThread);   \r\n    CloseHandle(pi.hProcess);\r\n    CloseHandle(pi.hThread);    \r\n    system(&quot;pause&quot;);\r\n    return 0;\r\n}\r\n\">复制</span><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\r\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h&gt;</span></span>\r\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    WCHAR filename<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"E:\\\\ConsoleApplication1 exe\"</span><span class=\"token punctuation\">;</span>    \r\n    STARTUPINFO si <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>si<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n    PROCESS_INFORMATION pi<span class=\"token punctuation\">;</span> \r\n    BOOL ret <span class=\"token operator\">=</span> <span class=\"token function\">CreateProcess</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> CREATE_NEW_CONSOLE <span class=\"token operator\">|</span> CREATE_SUSPENDED<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>si<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span> buffer <span class=\"token operator\">=</span> <span class=\"token number\">0x9090</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">WriteProcessMemory</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hProcess<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID <span class=\"token number\">0x401721</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"写入补丁成功！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token function\">ResumeThread</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \r\n    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>pi<span class=\"token punctuation\">.</span>hThread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \r\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  好，我们看一看实际效果：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207061812_np.gif\" class=\"medium-zoom-image\">\r\n</p>\r\n<h1 id=\"bh5\">硬件断点补丁<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h1>\r\n<p>  在知道什么是硬件断点补丁，我们首先知道什么是硬件断点。<code>Intel 80306</code>以上的<code>CPU</code>给我们提供了调试寄存器用于软件调试，硬件断点是通过设置调试寄存器实现的，如下图所示：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207091451_bp.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  <code>DR0</code>-<code>DR3</code>为设置断点的地址，<code>DR4</code>和<code>DR5</code>保留，<code>DR6</code>为调试异常产生后显示的一些信息，<code>DR7</code>保存了断点是否启用、断点类型和长度等信息。我们在使用硬件断点的时候，就是要设置调试寄存器，将断点的位置设置到<code>DR0</code>-<code>DR3</code>中，断点的长度设置到<code>DR7</code>的<code>LEN0</code>-<code>LEN3</code>中，将断点的类型设置到<code>DR7</code>的<code>RW0</code>-<code>RW3</code>中，将是否启用断点设置到<code>DR7</code>的<code>L0</code>-<code>L3</code>中。这就是我们3环调试器，使用<code>GUI</code>下硬件断点为我们做的事情。<br>\r\n  可以看出，我们能够下的硬件断点是十分有限的，总共就4个。硬件断点是和线程相关的，这些寄存器的信息存储于线程上下文当中。我们通过设置线程上下文，实现硬件断点的设置。代码实现如下：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"void SetHwBreakPoint(HANDLE HThread)\r\n{\r\n    CONTEXT ctx;\r\n    ctx.ContextFlags = CONTEXT_ALL;\r\n    GetThreadContext(HThread,&amp;ctx);\r\n    ctx.Dr0 = 0x040172C; //你要下断点的位置\r\n    ctx.Dr7 = 0x01;\r\n    SetThreadContext(HThread,&amp;ctx);\r\n}\r\n\">复制</span><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">SetHwBreakPoint</span><span class=\"token punctuation\">(</span>HANDLE HThread<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    CONTEXT ctx<span class=\"token punctuation\">;</span>\r\n    ctx<span class=\"token punctuation\">.</span>ContextFlags <span class=\"token operator\">=</span> CONTEXT_ALL<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">GetThreadContext</span><span class=\"token punctuation\">(</span>HThread<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    ctx<span class=\"token punctuation\">.</span>Dr0 <span class=\"token operator\">=</span> <span class=\"token number\">0x040172C</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//你要下断点的位置</span>\r\n    ctx<span class=\"token punctuation\">.</span>Dr7 <span class=\"token operator\">=</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">SetThreadContext</span><span class=\"token punctuation\">(</span>HThread<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  如果我们要设置硬件断点，就必须获取当前线程句柄，获得进程句柄就可以修改线程上下文，是不是很简单？不过在设置线程上下文的时候，必须挂起线程：为什么必须要挂起线程，这个是微软告诉我们的：</p>\r\n<blockquote>\r\n<p>Do not try to set the context for a running thread; the results are unpredictable. Use the SuspendThread function to suspend the thread before calling SetThreadContext.</p>\r\n</blockquote>\r\n<p>  也就是说，如果为了保证<code>SetThreadContext</code>是正确的，就必须保证线程是挂起的，否则结果不可预测。我们只需要挂起，设置好线程上下文，然后恢复线程运行就行了。<br>\r\n  设置好了硬件断点，我们如何相应这个断点触发并进行处理呢？答案就是使用<code>VEH</code>，结构化异常处理。</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"PVOID WINAPI AddVectoredExceptionHandler(\r\n    _In_ ULONG First,\r\n    _In_ PVECTORED_EXCEPTION_HANDLER Handler\r\n    );\r\n\">复制</span><code class=\"language-cpp\">PVOID WINAPI <span class=\"token function\">AddVectoredExceptionHandler</span><span class=\"token punctuation\">(</span>\r\n    _In_ ULONG First<span class=\"token punctuation\">,</span>\r\n    _In_ PVECTORED_EXCEPTION_HANDLER Handler\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  上面的函数是添加一个结构化处理函数，第一个参数如果非零，那么异常发生时，第一个调用的就是它。什么？硬件断点触发就是一个异常？对的，当它触发时，会产生<code>STATUS_SINGLE_STEP</code>异常，如果在调试状态，会由调试器接管。如果没有调试器，但有异常处理程序，那么就会执行它。我们使用异常处理实现破解的程序代码的如下：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"DWORD NTAPI ExceptionHandler ( EXCEPTION_POINTERS*\r\n    ExceptionInfo )\r\n{\r\n    if ( ( DWORD )\r\n        ExceptionInfo->ExceptionRecord->ExceptionAddress\r\n        == 0x040172C ) //判断是不是我们下断点的地址\r\n    {\r\n        ExceptionInfo->ContextRecord->Eip += 2;  //两个字节的指令\r\n        return EXCEPTION_CONTINUE_EXECUTION;\r\n    }   \r\n    return EXCEPTION_CONTINUE_SEARCH;\r\n}\r\n\">复制</span><code class=\"language-cpp\">DWORD NTAPI <span class=\"token function\">ExceptionHandler</span> <span class=\"token punctuation\">(</span> EXCEPTION_POINTERS<span class=\"token operator\">*</span>\r\n    ExceptionInfo <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> DWORD <span class=\"token punctuation\">)</span>\r\n        ExceptionInfo<span class=\"token operator\">-&gt;</span>ExceptionRecord<span class=\"token operator\">-&gt;</span>ExceptionAddress\r\n        <span class=\"token operator\">==</span> <span class=\"token number\">0x040172C</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\">//判断是不是我们下断点的地址</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        ExceptionInfo<span class=\"token operator\">-&gt;</span>ContextRecord<span class=\"token operator\">-&gt;</span>Eip <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//两个字节的指令</span>\r\n        <span class=\"token keyword\">return</span> EXCEPTION_CONTINUE_EXECUTION<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>   \r\n    <span class=\"token keyword\">return</span> EXCEPTION_CONTINUE_SEARCH<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  假如我们不想要这个函数了，恢复还是通过设置线程上下文，如何移除向量异常处理程序？我们需要用到下面的<code>API</code>：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"ULONG RemoveVectoredExceptionHandler(\r\n  PVOID Handle\r\n);\r\n\">复制</span><code class=\"language-cpp\">ULONG <span class=\"token function\">RemoveVectoredExceptionHandler</span><span class=\"token punctuation\">(</span>\r\n  PVOID Handle\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\r\n<p>  这个句柄就是你的添加向量异常处理程序的句柄，具体咋用我就不赘述了，下面我们将会用硬件断点 + 劫持技术实现破解我们的“小白鼠”。</p>\r\n<h1 id=\"bh6\">硬件断点劫持补丁<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h1>\r\n<h2 id=\"bh7\">实现<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h2>\r\n<p>  假设我们劫持的<code>Dll</code>是系统的，我们既然劫持它，导出的函数它有的我得也有，我劫持执行的函数必须还得调用原系统<code>Dll</code>的函数，一个一个写未免不太费劲。我们需要借助一个工具，实现帮我们生成劫持代码模板，通过略微的修改实现我们的核心代码，从而实现劫持。常见可以劫持的<code>Dll</code>有：<code>lpk.dll</code>、<code>winmm.dll</code>、<code>version.dll</code>、<code>ws2_32.dll</code>等等。我们先看看这个工具长啥样子：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207100812_11.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  接下来我们实战一波，但是为了看到效果，我们需要在小白鼠上面加个代码：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"#include <iostream>\r\n#include <Windows.h>\r\n\r\nusing namespace std;\r\n\r\nint main(int argc, char* argv[])\r\n{\r\n    int x = 0;\r\n    LoadLibrary(L&quot;winmm.dll&quot;); //假设我需要这个dll，我加载进去\r\n    cout << &quot;请输入密钥：&quot; << endl;\r\n    cin >> x;\r\n    if (x == 1234)\r\n    {\r\n        cout << &quot;成功，By.寂静的羽夏，CNBLOG Only！！！&quot; << endl;\r\n    }\r\n    else\r\n    {\r\n        cout << &quot;失败，By.寂静的羽夏，CNBLOG Only！！！&quot; << endl;\r\n    }\r\n\r\n    system(&quot;pause&quot;);\r\n    return 0;\r\n}\r\n\">复制</span><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\r\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h&gt;</span></span>\r\n\r\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>L<span class=\"token string\">\"winmm.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//假设我需要这个dll，我加载进去</span>\r\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"请输入密钥：\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n    cin <span class=\"token operator\">&gt;&gt;</span> x<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"成功，By.寂静的羽夏，CNBLOG Only！！！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">else</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"失败，By.寂静的羽夏，CNBLOG Only！！！\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  为什么要添加一句<code>LoadLibrary</code>呢？因为劫持是有条件的，就是它必须加载<code>Dll</code>才能行，别看导入表有一些，它们其实根本没有加载：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207131326_20.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  可以看出，里面的导入表的<code>Dll</code>根本没有加载，就算你打算劫持里面的，没加载，根本无效。然而这个程序实在太小了，所以用常规的方式加载个系统<code>Dll</code>以供测试。<br>\r\n  打开我们的<code>AheadLib</code>工具，然后打开我们想要劫持的<code>Dll</code>作为输入，然后找到指定目录作为输出，就点击生成，就在我们想要的位置生成代码了：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207131306_12.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  下一步该创建一个动态链接库项目，如下图所示：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207131902_13.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  为了生成的名字和系统的<code>Dll</code>一致，就用一样的名字：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207131909_14.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  然后把生成的代码覆盖到<code>dllmain.cpp</code>文件中，如下图所示：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207132108_15.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  然而，这是不能直接生成代码的，我们需要做一些配置。首先设置使用多字节字符集：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207132253_16.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  设置不使用预编译头：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207132302_17.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  注意还要在上面项目配置之前要注意设置平台为<code>x86</code>：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207132315_18.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  如果不设置<code>x86</code>，就会报错如下：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207132324_19.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  然后需要做一些小修改并实现代码，如下如所示修改和编码实现：</p>\r\n<pre class=\"language-cpp line-numbers\" highlighted=\"true\"><span class=\"copy\" data-clipboard-text=\"////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// AheadLib 命名空间\r\nnamespace AheadLib\r\n{\r\n    HMODULE m_hModule = NULL;   // 原始模块句柄\r\n    DWORD m_dwReturn[193] = { 0 };  // 原始函数返回地址\r\n    const DWORD addr = 0x040172C;   \r\n    DWORD NTAPI ExceptionHandler(EXCEPTION_POINTERS*\r\n        ExceptionInfo)\r\n    {\r\n        if ((DWORD)\r\n            ExceptionInfo->ExceptionRecord->ExceptionAddress\r\n            == addr)\r\n        {\r\n            ExceptionInfo->ContextRecord->Eip += 2;\r\n            return EXCEPTION_CONTINUE_EXECUTION;\r\n        }   \r\n        return EXCEPTION_CONTINUE_SEARCH;\r\n    }   \r\n    void SetHwBreakPoint(HANDLE HThread)\r\n    {\r\n        CONTEXT ctx={0};\r\n        ctx.ContextFlags = CONTEXT_ALL;\r\n        GetThreadContext(HThread, &amp;ctx);\r\n        ctx.Dr0 = addr;\r\n        ctx.Dr7 = 0x01;\r\n        SetThreadContext(HThread, &amp;ctx);\r\n    }   \r\n    DWORD WINAPI ThreadProc(_In_ LPVOID\r\n        lpParameter)\r\n    {\r\n        HANDLE htread = OpenThread(THREAD_ALL_ACCESS,\r\n            TRUE, (DWORD)lpParameter);\r\n        if (htread)\r\n        {\r\n            SuspendThread(htread);\r\n            SetHwBreakPoint(htread);\r\n            ResumeThread(htread);\r\n            CloseHandle(htread);\r\n            return TRUE;\r\n        }\r\n        return FALSE;\r\n    }   \r\n    // 加载原始模块\r\n    inline BOOL WINAPI Load()\r\n    {\r\n        TCHAR tzPath[MAX_PATH];\r\n        TCHAR tzTemp[MAX_PATH * 2]; \r\n        /*变动的代码区：开始*/\r\n        BOOL isWowSystem = FALSE;\r\n        if (IsWow64Process((HANDLE)-1,\r\n            &amp;isWowSystem))\r\n        {\r\n            if (isWowSystem)\r\n            {\r\n                UINT r =  GetSystemWow64Directory(tzPath,   MAX_PATH);\r\n                if (!r)\r\n                {\r\n                    wsprintf(tzTemp, TEXT(&quot;无法加载 %s，程序无法正常运行。&quot;), tzPath);\r\n                    MessageBox(NULL, tzTemp, TEXT(&quot;AheadLib&quot;), MB_ICONSTOP);\r\n                }\r\n            }   \r\n            else\r\n            {\r\n                GetSystemDirectory(tzPath, MAX_PATH);\r\n            }\r\n        }   \r\n        lstrcat(tzPath, TEXT(&quot;\\\\winmm.dll&quot;));\r\n        AddVectoredExceptionHandler(1   (PVECTORED_EXCEPTION_HANDLER)ExceptionHandler);\r\n        HANDLE Hhandle = CreateThread(NULL, NULL,   ThreadProc, (LPVOID)GetCurrentThreadId(), NULL,NULL    ;   \r\n        /*变动的代码区：结束*/  \r\n        m_hModule = LoadLibrary(tzPath);\r\n        if (m_hModule == NULL)\r\n        {\r\n            wsprintf(tzTemp, TEXT(&quot;无法加载 %s，程序无法正  运行。&quot;), tzPath);\r\n            MessageBox(NULL, tzTemp, TEXT(&quot;AheadLib&quot;), MB_ICONSTOP);\r\n        }   \r\n        return (m_hModule != NULL);\r\n    }\r\n\r\n    //其他区域的代码保持不变，编译即可\r\n\">复制</span><code class=\"language-cpp\"><span class=\"token comment\">////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span>\r\n<span class=\"token comment\">// AheadLib 命名空间</span>\r\n<span class=\"token keyword\">namespace</span> AheadLib\r\n<span class=\"token punctuation\">{</span>\r\n    HMODULE m_hModule <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 原始模块句柄</span>\r\n    DWORD m_dwReturn<span class=\"token punctuation\">[</span><span class=\"token number\">193</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 原始函数返回地址</span>\r\n    <span class=\"token keyword\">const</span> DWORD addr <span class=\"token operator\">=</span> <span class=\"token number\">0x040172C</span><span class=\"token punctuation\">;</span>   \r\n    DWORD NTAPI <span class=\"token function\">ExceptionHandler</span><span class=\"token punctuation\">(</span>EXCEPTION_POINTERS<span class=\"token operator\">*</span>\r\n        ExceptionInfo<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>\r\n            ExceptionInfo<span class=\"token operator\">-&gt;</span>ExceptionRecord<span class=\"token operator\">-&gt;</span>ExceptionAddress\r\n            <span class=\"token operator\">==</span> addr<span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            ExceptionInfo<span class=\"token operator\">-&gt;</span>ContextRecord<span class=\"token operator\">-&gt;</span>Eip <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span> EXCEPTION_CONTINUE_EXECUTION<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>   \r\n        <span class=\"token keyword\">return</span> EXCEPTION_CONTINUE_SEARCH<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>   \r\n    <span class=\"token keyword\">void</span> <span class=\"token function\">SetHwBreakPoint</span><span class=\"token punctuation\">(</span>HANDLE HThread<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        CONTEXT ctx<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n        ctx<span class=\"token punctuation\">.</span>ContextFlags <span class=\"token operator\">=</span> CONTEXT_ALL<span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">GetThreadContext</span><span class=\"token punctuation\">(</span>HThread<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        ctx<span class=\"token punctuation\">.</span>Dr0 <span class=\"token operator\">=</span> addr<span class=\"token punctuation\">;</span>\r\n        ctx<span class=\"token punctuation\">.</span>Dr7 <span class=\"token operator\">=</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">SetThreadContext</span><span class=\"token punctuation\">(</span>HThread<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>   \r\n    DWORD WINAPI <span class=\"token function\">ThreadProc</span><span class=\"token punctuation\">(</span>_In_ LPVOID\r\n        lpParameter<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        HANDLE htread <span class=\"token operator\">=</span> <span class=\"token function\">OpenThread</span><span class=\"token punctuation\">(</span>THREAD_ALL_ACCESS<span class=\"token punctuation\">,</span>\r\n            TRUE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span>lpParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>htread<span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">SuspendThread</span><span class=\"token punctuation\">(</span>htread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token function\">SetHwBreakPoint</span><span class=\"token punctuation\">(</span>htread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token function\">ResumeThread</span><span class=\"token punctuation\">(</span>htread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token function\">CloseHandle</span><span class=\"token punctuation\">(</span>htread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>   \r\n    <span class=\"token comment\">// 加载原始模块</span>\r\n    <span class=\"token keyword\">inline</span> BOOL WINAPI <span class=\"token function\">Load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        TCHAR tzPath<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        TCHAR tzTemp<span class=\"token punctuation\">[</span>MAX_PATH <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \r\n        <span class=\"token comment\">/*变动的代码区：开始*/</span>\r\n        BOOL isWowSystem <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IsWow64Process</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>HANDLE<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n            <span class=\"token operator\">&amp;</span>isWowSystem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isWowSystem<span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                UINT r <span class=\"token operator\">=</span>  <span class=\"token function\">GetSystemWow64Directory</span><span class=\"token punctuation\">(</span>tzPath<span class=\"token punctuation\">,</span>   MAX_PATH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>r<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>tzTemp<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法加载 %s，程序无法正常运行。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tzPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                    <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> tzTemp<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AheadLib\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MB_ICONSTOP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>   \r\n            <span class=\"token keyword\">else</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                <span class=\"token function\">GetSystemDirectory</span><span class=\"token punctuation\">(</span>tzPath<span class=\"token punctuation\">,</span> MAX_PATH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>   \r\n        <span class=\"token function\">lstrcat</span><span class=\"token punctuation\">(</span>tzPath<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\winmm.dll\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">AddVectoredExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span>   <span class=\"token punctuation\">(</span>PVECTORED_EXCEPTION_HANDLER<span class=\"token punctuation\">)</span>ExceptionHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        HANDLE Hhandle <span class=\"token operator\">=</span> <span class=\"token function\">CreateThread</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>   ThreadProc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPVOID<span class=\"token punctuation\">)</span><span class=\"token function\">GetCurrentThreadId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span>    <span class=\"token punctuation\">;</span>   \r\n        <span class=\"token comment\">/*变动的代码区：结束*/</span>  \r\n        m_hModule <span class=\"token operator\">=</span> <span class=\"token function\">LoadLibrary</span><span class=\"token punctuation\">(</span>tzPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_hModule <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">wsprintf</span><span class=\"token punctuation\">(</span>tzTemp<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无法加载 %s，程序无法正  运行。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tzPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> tzTemp<span class=\"token punctuation\">,</span> <span class=\"token function\">TEXT</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AheadLib\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MB_ICONSTOP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>   \r\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>m_hModule <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\">//其他区域的代码保持不变，编译即可</span>\r\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\r\n<p>  然后我们看看效果：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207133440_hp.gif\" class=\"medium-zoom-image\">\r\n</p>\r\n<p>  比如我不确定写的劫持是否正确，或者写劫持发现没效果，如何进行调试呢？很简单，把被劫持的程序拷一份到调试目录，然后在项目配置中修改下面的路径为被劫持的程序，正常下断点调试即可：</p>\r\n<p align=\"center\">\r\n<img src=\"https://images.cnblogs.com/cnblogs_com/blogs/702188/galleries/2064803/o_211207140036_21.png\" class=\"medium-zoom-image\">\r\n</p>\r\n<h2 id=\"bh8\">反制措施<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h2>\r\n<p>  既然是劫持，我们如果想要反制，可以在程序代码中加上自己所在目录有没有这个<code>Dll</code>，虽然有定义的作用，但是对于能力有点的逆向者来说，这个东西是没用的，尤其不是按照本实例进行动态加载的。如果不是动态加载，你根本掌握不了主导权。我在你检查之前加载完毕，我直接<code>patch</code>掉正确的路径为错误的路径，你根本查不到。<br>\r\n  还有一个方式可以阻止<code>Dll</code>劫持，在注册表键值：<code>KEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\KnownDLLs</code>里面存储了一些项目，如果需要里面的<code>Dll</code>，直接从系统目录加载，而不通过先查一查当前目录有没有。对于以普通用户启动的程序来说，不失一个很好的反制措施，但是不幸的是，如果你没有<code>System</code>权限，你是根本修改不了该项目下的值的，修改后，需要重启项目生效。</p>\r\n<h1 id=\"bh9\">下一篇<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h1>\r\n<p>  羽夏逆向指引——反制</p>\r\n\r\n</div>', '0', '0', '0', '4', '3');
INSERT INTO `app01_article` VALUES ('6', '联盛德 HLK-W806 (五): W801开发板上手报告', '目录 联盛德 HLK-W806 (一): Ubuntu20.04下的开发环境配置, 编译和烧录说明 联盛德 HLK-W806 (二): Win10下的开发环境配置, 编译和烧录说明 联盛德 HLK-W806 (三): 免按键自动下载和复位 联盛德 HLK-W806 (四): 软件SPI和硬件SPI驱 ...', '2021-11-30 00:46:34.418803', '<div id=\"cnblogs_post_body\" class=\"blogpost-body cnblogs-markdown\">\r\n<p>@</p><div class=\"toc\"><div class=\"toc-container-header\">目录</div><ul><li><a href=\"#flinkx的安装与简单使用\">FlinkX的安装与简单使用</a><ul><li><a href=\"#flinkx的安装\">FlinkX的安装</a></li><li><a href=\"#flinkx的简单使用\">FlinkX的简单使用</a><ul><li><a href=\"#读取mysql中student表中数据\">读取mysql中student表中数据</a></li><li><a href=\"#flinkx本地运行\">FlinkX本地运行</a></li><li><a href=\"#mysqltohdfs\">MySQLToHDFS</a></li><li><a href=\"#mysqltohive\">MySQLToHive</a></li><li><a href=\"#mysqltohbase\">MySQLToHBase</a></li><li><a href=\"#mysqltomysql\">MySQLToMySQL</a></li></ul></li></ul></li></ul></div><p></p>\r\n<h1 id=\"flinkx的安装与简单使用\">FlinkX的安装与简单使用<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h1>\r\n<p>@</p><div class=\"toc\"><div class=\"toc-container-header\">目录</div><ul><li><a href=\"#flinkx的安装与简单使用\">FlinkX的安装与简单使用</a><ul><li><a href=\"#flinkx的安装\">FlinkX的安装</a></li><li><a href=\"#flinkx的简单使用\">FlinkX的简单使用</a><ul><li><a href=\"#读取mysql中student表中数据\">读取mysql中student表中数据</a></li><li><a href=\"#flinkx本地运行\">FlinkX本地运行</a></li><li><a href=\"#mysqltohdfs\">MySQLToHDFS</a></li><li><a href=\"#mysqltohive\">MySQLToHive</a></li><li><a href=\"#mysqltohbase\">MySQLToHBase</a></li><li><a href=\"#mysqltomysql\">MySQLToMySQL</a></li></ul></li></ul></li></ul></div><p></p>\r\n<h3 id=\"flinkx的安装\">FlinkX的安装<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<blockquote>\r\n<p>安装unzip：yum install unzip</p>\r\n</blockquote>\r\n<p>1、上传并解压</p>\r\n<pre highlighted=\"true\"><code class=\"hljs apache\"><span class=\"hljs-attribute\">unzip</span> flinkx-<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">10</span>.zip -d /usr/local/soft/\r\n</code></pre>\r\n<p>2、配置环境变量</p>\r\n<p>3、给bin/flinkx这个文件加上执行权限</p>\r\n<pre highlighted=\"true\"><code class=\"hljs nginx\"><span class=\"hljs-attribute\">chmod</span> a+x flinkx\r\n</code></pre>\r\n<p>4、修改配置文件，设置运行端口</p>\r\n<pre highlighted=\"true\"><code class=\"hljs nginx\"><span class=\"hljs-attribute\">vim</span> flinkconf/flink-conf.yaml\r\n</code></pre>\r\n<pre highlighted=\"true\"><code class=\"hljs yaml\"><span class=\"hljs-comment\">## web服务端口，不指定的话会随机生成一个</span>\r\n<span class=\"hljs-attr\">rest.bind-port:</span> <span class=\"hljs-number\">8888</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>配置环境变量、</p>\r\n<p>vim /etc/profile</p>\r\n<p>FLINKX_HOME=</p>\r\n</blockquote>\r\n<blockquote>\r\n<p><mark>flinkX开源网址：<a href=\"https://github.com/DTStack/flinkx\" target=\"_blank\">https://github.com/DTStack/flinkx</a></mark></p>\r\n</blockquote>\r\n<h3 id=\"flinkx的简单使用\">FlinkX的简单使用<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h3>\r\n<h4 id=\"读取mysql中student表中数据\">读取mysql中student表中数据<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<pre highlighted=\"true\"><code class=\"language-json hljs\">{\r\n  <span class=\"hljs-attr\">\"job\"</span>: {\r\n    <span class=\"hljs-attr\">\"content\"</span>: [\r\n      {\r\n        <span class=\"hljs-attr\">\"reader\"</span>: {\r\n          <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n            <span class=\"hljs-attr\">\"username\"</span>: <span class=\"hljs-string\">\"root\"</span>,\r\n            <span class=\"hljs-attr\">\"password\"</span>: <span class=\"hljs-string\">\"123456\"</span>,\r\n            <span class=\"hljs-attr\">\"connection\"</span>: [{\r\n              <span class=\"hljs-attr\">\"jdbcUrl\"</span>: [<span class=\"hljs-string\">\"jdbc:mysql://master:3306/student?userSSL=false&amp;useUnicode=true&amp;characterEncoding=utf8\"</span>],\r\n              <span class=\"hljs-attr\">\"table\"</span>: [<span class=\"hljs-string\">\"student\"</span>]\r\n            }],\r\n            <span class=\"hljs-attr\">\"column\"</span>: [<span class=\"hljs-string\">\"*\"</span>],\r\n            <span class=\"hljs-attr\">\"customSql\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n            <span class=\"hljs-attr\">\"where\"</span>: <span class=\"hljs-string\">\"id &gt; 1500100900\"</span>,\r\n            <span class=\"hljs-attr\">\"splitPk\"</span>: <span class=\"hljs-string\">\"id\"</span>,\r\n            <span class=\"hljs-attr\">\"queryTimeOut\"</span>: <span class=\"hljs-number\">1000</span>\r\n          },\r\n          <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"mysqlreader\"</span>\r\n        },\r\n        <span class=\"hljs-attr\">\"writer\"</span>: {\r\n          <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"streamwriter\"</span>,\r\n          <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n            <span class=\"hljs-attr\">\"print\"</span>: <span class=\"hljs-literal\">true</span>\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    <span class=\"hljs-attr\">\"setting\"</span>: {\r\n      <span class=\"hljs-attr\">\"speed\"</span>: {\r\n        <span class=\"hljs-attr\">\"channel\"</span>: <span class=\"hljs-number\">3</span>,\r\n        <span class=\"hljs-attr\">\"bytes\"</span>: <span class=\"hljs-number\">0</span>\r\n      },\r\n      <span class=\"hljs-attr\">\"errorLimit\"</span>: {\r\n        <span class=\"hljs-attr\">\"record\"</span>: <span class=\"hljs-number\">100</span>\r\n      },\r\n      <span class=\"hljs-attr\">\"restore\"</span>: {\r\n        <span class=\"hljs-attr\">\"maxRowNumForCheckpoint\"</span>: <span class=\"hljs-number\">0</span>,\r\n        <span class=\"hljs-attr\">\"isRestore\"</span>: <span class=\"hljs-literal\">false</span>,\r\n        <span class=\"hljs-attr\">\"restoreColumnName\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n        <span class=\"hljs-attr\">\"restoreColumnIndex\"</span>: <span class=\"hljs-number\">0</span>\r\n      },\r\n      <span class=\"hljs-attr\">\"log\"</span> : {\r\n        <span class=\"hljs-attr\">\"isLogger\"</span>: <span class=\"hljs-literal\">false</span>,\r\n        <span class=\"hljs-attr\">\"level\"</span> : <span class=\"hljs-string\">\"debug\"</span>,\r\n        <span class=\"hljs-attr\">\"path\"</span> : <span class=\"hljs-string\">\"\"</span>,\r\n        <span class=\"hljs-attr\">\"pattern\"</span>:<span class=\"hljs-string\">\"\"</span>\r\n      }\r\n    }\r\n  }\r\n}\r\n</code></pre>\r\n<h4 id=\"flinkx本地运行\">FlinkX本地运行<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<pre highlighted=\"true\"><code class=\"hljs verilog\">flinkx -mode <span class=\"hljs-keyword\">local</span> -job flinkx3<span class=\"hljs-variable\">.json</span> -pluginRoot ../syncplugins -flinkconf ../flinkconf\r\n运行时文件所处路径为：/usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/<span class=\"hljs-keyword\">package</span>\r\n</code></pre>\r\n<h4 id=\"mysqltohdfs\">MySQLToHDFS<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<ul>\r\n<li>配置文件</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs json\">{\r\n    <span class=\"hljs-attr\">\"job\"</span>: {\r\n        <span class=\"hljs-attr\">\"content\"</span>: [\r\n            {\r\n                <span class=\"hljs-attr\">\"reader\"</span>: {\r\n                    <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n                        <span class=\"hljs-attr\">\"username\"</span>: <span class=\"hljs-string\">\"root\"</span>,\r\n                        <span class=\"hljs-attr\">\"password\"</span>: <span class=\"hljs-string\">\"123456\"</span>,\r\n                        <span class=\"hljs-attr\">\"connection\"</span>: [\r\n                            {\r\n                                <span class=\"hljs-attr\">\"jdbcUrl\"</span>: [\r\n                                    <span class=\"hljs-string\">\"jdbc:mysql://master:3306/student?characterEncoding=utf8\"</span>\r\n                                ],\r\n                                <span class=\"hljs-attr\">\"table\"</span>: [\r\n                                    <span class=\"hljs-string\">\"student\"</span>\r\n                                ]\r\n                            }\r\n                        ],\r\n                        <span class=\"hljs-attr\">\"column\"</span>: [\r\n                            <span class=\"hljs-string\">\"*\"</span>\r\n                        ],\r\n                        <span class=\"hljs-attr\">\"customSql\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n                        <span class=\"hljs-attr\">\"where\"</span>: <span class=\"hljs-string\">\"clazz = \'理科二班\'\"</span>,\r\n                        <span class=\"hljs-attr\">\"splitPk\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n                        <span class=\"hljs-attr\">\"queryTimeOut\"</span>: <span class=\"hljs-number\">1000</span>,\r\n                        <span class=\"hljs-attr\">\"requestAccumulatorInterval\"</span>: <span class=\"hljs-number\">2</span>\r\n                    },\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"mysqlreader\"</span>\r\n                },\r\n                <span class=\"hljs-attr\">\"writer\"</span>: {\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hdfswriter\"</span>,\r\n                    <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n                        <span class=\"hljs-attr\">\"path\"</span>: <span class=\"hljs-string\">\"hdfs://master:9000/data/flinkx/student\"</span>,\r\n                        <span class=\"hljs-attr\">\"defaultFS\"</span>: <span class=\"hljs-string\">\"hdfs://master:9000\"</span>,\r\n                        <span class=\"hljs-attr\">\"column\"</span>: [\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"col1\"</span>,\r\n                                <span class=\"hljs-attr\">\"index\"</span>: <span class=\"hljs-number\">0</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            },\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"col2\"</span>,\r\n                                <span class=\"hljs-attr\">\"index\"</span>: <span class=\"hljs-number\">1</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            },\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"col3\"</span>,\r\n                                <span class=\"hljs-attr\">\"index\"</span>: <span class=\"hljs-number\">2</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            },\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"col4\"</span>,\r\n                                <span class=\"hljs-attr\">\"index\"</span>: <span class=\"hljs-number\">3</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            },\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"col5\"</span>,\r\n                                <span class=\"hljs-attr\">\"index\"</span>: <span class=\"hljs-number\">4</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            },\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"col6\"</span>,\r\n                                <span class=\"hljs-attr\">\"index\"</span>: <span class=\"hljs-number\">5</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            }\r\n                        ],\r\n                        <span class=\"hljs-attr\">\"fieldDelimiter\"</span>: <span class=\"hljs-string\">\",\"</span>,\r\n                        <span class=\"hljs-attr\">\"fileType\"</span>: <span class=\"hljs-string\">\"text\"</span>,\r\n                        <span class=\"hljs-attr\">\"writeMode\"</span>: <span class=\"hljs-string\">\"overwrite\"</span>\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        <span class=\"hljs-attr\">\"setting\"</span>: {\r\n            <span class=\"hljs-attr\">\"restore\"</span>: {\r\n                <span class=\"hljs-attr\">\"isRestore\"</span>: <span class=\"hljs-literal\">false</span>,\r\n                <span class=\"hljs-attr\">\"isStream\"</span>: <span class=\"hljs-literal\">false</span>\r\n            },\r\n            <span class=\"hljs-attr\">\"errorLimit\"</span>: {},\r\n            <span class=\"hljs-attr\">\"speed\"</span>: {\r\n                <span class=\"hljs-attr\">\"channel\"</span>: <span class=\"hljs-number\">1</span>\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<ul>\r\n<li>启动任务</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs verilog\">flinkx -mode <span class=\"hljs-keyword\">local</span> -job /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/jsonConf/mysqlToHDFS<span class=\"hljs-variable\">.json</span> -pluginRoot /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/syncplugins/ -flinkconf /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/flinkconf/\r\n</code></pre>\r\n<ul>\r\n<li>监听日志</li>\r\n</ul>\r\n<blockquote>\r\n<p>flinkx 任务启动后，会在执行命令的目录下生成一个nohup.out文件</p>\r\n</blockquote>\r\n<pre highlighted=\"true\"><code class=\"hljs csharp\">tail -f nohup.<span class=\"hljs-keyword\">out</span>\r\n</code></pre>\r\n<ul>\r\n<li>通过web界面查看任务运行情况</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs less\"><span class=\"hljs-attribute\">http</span>:<span class=\"hljs-comment\">//master:8888</span>\r\n</code></pre>\r\n<h4 id=\"mysqltohive\">MySQLToHive<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<ul>\r\n<li>配置文件</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs json\">{\r\n    <span class=\"hljs-attr\">\"job\"</span>: {\r\n        <span class=\"hljs-attr\">\"content\"</span>: [\r\n            {\r\n                <span class=\"hljs-attr\">\"reader\"</span>: {\r\n                    <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n                        <span class=\"hljs-attr\">\"username\"</span>: <span class=\"hljs-string\">\"root\"</span>,\r\n                        <span class=\"hljs-attr\">\"password\"</span>: <span class=\"hljs-string\">\"123456\"</span>,\r\n                        <span class=\"hljs-attr\">\"connection\"</span>: [\r\n                            {\r\n                                <span class=\"hljs-attr\">\"jdbcUrl\"</span>: [\r\n                                    <span class=\"hljs-string\">\"jdbc:mysql://master:3306/student?characterEncoding=utf8\"</span>\r\n                                ],\r\n                                <span class=\"hljs-attr\">\"table\"</span>: [\r\n                                    <span class=\"hljs-string\">\"student\"</span>\r\n                                ]\r\n                            }\r\n                        ],\r\n                        <span class=\"hljs-attr\">\"column\"</span>: [\r\n                            <span class=\"hljs-string\">\"*\"</span>\r\n                        ],\r\n                        <span class=\"hljs-attr\">\"customSql\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n                        <span class=\"hljs-attr\">\"where\"</span>: <span class=\"hljs-string\">\"clazz = \'文科二班\'\"</span>,\r\n                        <span class=\"hljs-attr\">\"splitPk\"</span>: <span class=\"hljs-string\">\"id\"</span>,\r\n                        <span class=\"hljs-attr\">\"queryTimeOut\"</span>: <span class=\"hljs-number\">1000</span>,\r\n                        <span class=\"hljs-attr\">\"requestAccumulatorInterval\"</span>: <span class=\"hljs-number\">2</span>\r\n                    },\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"mysqlreader\"</span>\r\n                },\r\n                <span class=\"hljs-attr\">\"writer\"</span>: {\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hivewriter\"</span>,\r\n                    <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n                        <span class=\"hljs-attr\">\"jdbcUrl\"</span>: <span class=\"hljs-string\">\"jdbc:hive2://master:10000/testflinkx\"</span>,\r\n                        <span class=\"hljs-attr\">\"username\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n                        <span class=\"hljs-attr\">\"password\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n                        <span class=\"hljs-attr\">\"fileType\"</span>: <span class=\"hljs-string\">\"text\"</span>,\r\n                        <span class=\"hljs-attr\">\"fieldDelimiter\"</span>: <span class=\"hljs-string\">\",\"</span>,\r\n                        <span class=\"hljs-attr\">\"writeMode\"</span>: <span class=\"hljs-string\">\"overwrite\"</span>,\r\n                        <span class=\"hljs-attr\">\"compress\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n                        <span class=\"hljs-attr\">\"charsetName\"</span>: <span class=\"hljs-string\">\"UTF-8\"</span>,\r\n                        <span class=\"hljs-attr\">\"maxFileSize\"</span>: <span class=\"hljs-number\">1073741824</span>,\r\n                        <span class=\"hljs-attr\">\"tablesColumn\"</span>: <span class=\"hljs-string\">\"{\\\"student\\\":[{\\\"key\\\":\\\"id\\\",\\\"type\\\":\\\"string\\\"},{\\\"key\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"key\\\":\\\"age\\\",\\\"type\\\":\\\"string\\\"}]}\"</span>,\r\n                        <span class=\"hljs-attr\">\"defaultFS\"</span>: <span class=\"hljs-string\">\"hdfs://master:9000\"</span>\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        <span class=\"hljs-attr\">\"setting\"</span>: {\r\n            <span class=\"hljs-attr\">\"restore\"</span>: {\r\n                <span class=\"hljs-attr\">\"isRestore\"</span>: <span class=\"hljs-literal\">false</span>,\r\n                <span class=\"hljs-attr\">\"isStream\"</span>: <span class=\"hljs-literal\">false</span>\r\n            },\r\n            <span class=\"hljs-attr\">\"errorLimit\"</span>: {},\r\n            <span class=\"hljs-attr\">\"speed\"</span>: {\r\n                <span class=\"hljs-attr\">\"channel\"</span>: <span class=\"hljs-number\">3</span>\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<ul>\r\n<li>在hive中创建testflinkx数据库，并创建student分区表</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs sql\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">database</span> testflinkx;\r\n<span class=\"hljs-keyword\">use</span> testflinkx;\r\n<span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">TABLE</span> <span class=\"hljs-string\">`student`</span>(\r\n  <span class=\"hljs-string\">`id`</span> <span class=\"hljs-keyword\">string</span>, \r\n  <span class=\"hljs-string\">`name`</span> <span class=\"hljs-keyword\">string</span>, \r\n  <span class=\"hljs-string\">`age`</span> <span class=\"hljs-keyword\">string</span>)\r\nPARTITIONED <span class=\"hljs-keyword\">BY</span> ( \r\n  <span class=\"hljs-string\">`pt`</span> <span class=\"hljs-keyword\">string</span>)\r\n<span class=\"hljs-keyword\">ROW</span> <span class=\"hljs-keyword\">FORMAT</span> <span class=\"hljs-keyword\">DELIMITED</span> \r\n  <span class=\"hljs-keyword\">FIELDS</span> <span class=\"hljs-keyword\">TERMINATED</span> <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">\',\'</span>\r\n</code></pre>\r\n<ul>\r\n<li>启动hiveserver2</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs apache\"><span class=\"hljs-comment\"># 第一种方式：</span>\r\n<span class=\"hljs-attribute\">hiveserver2</span>\r\n<span class=\"hljs-comment\"># 第二种方式:</span>\r\n<span class=\"hljs-attribute\">hive</span> --service hiveserver<span class=\"hljs-number\">2</span>\r\n</code></pre>\r\n<ul>\r\n<li>启动任务</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs verilog\">flinkx -mode <span class=\"hljs-keyword\">local</span> -job /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/jsonConf/mysqlToHive<span class=\"hljs-variable\">.json</span> -pluginRoot /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/syncplugins/ -flinkconf /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/flinkconf/\r\n</code></pre>\r\n<ul>\r\n<li>查看日志及运行情况同上</li>\r\n</ul>\r\n<h4 id=\"mysqltohbase\">MySQLToHBase<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<ul>\r\n<li>配置文件</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs json\">{\r\n    <span class=\"hljs-attr\">\"job\"</span>: {\r\n        <span class=\"hljs-attr\">\"content\"</span>: [\r\n            {\r\n                <span class=\"hljs-attr\">\"reader\"</span>: {\r\n                    <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n                        <span class=\"hljs-attr\">\"username\"</span>: <span class=\"hljs-string\">\"root\"</span>,\r\n                        <span class=\"hljs-attr\">\"password\"</span>: <span class=\"hljs-string\">\"123456\"</span>,\r\n                        <span class=\"hljs-attr\">\"connection\"</span>: [\r\n                            {\r\n                                <span class=\"hljs-attr\">\"jdbcUrl\"</span>: [\r\n                                    <span class=\"hljs-string\">\"jdbc:mysql://master:3306/student?characterEncoding=utf8\"</span>\r\n                                ],\r\n                                <span class=\"hljs-attr\">\"table\"</span>: [\r\n                                    <span class=\"hljs-string\">\"score\"</span>\r\n                                ]\r\n                            }\r\n                        ],\r\n                        <span class=\"hljs-attr\">\"column\"</span>: [\r\n                            <span class=\"hljs-string\">\"*\"</span>\r\n                        ],\r\n                        <span class=\"hljs-attr\">\"customSql\"</span>: <span class=\"hljs-string\">\"\"</span>,\r\n                        <span class=\"hljs-attr\">\"splitPk\"</span>: <span class=\"hljs-string\">\"student_id\"</span>,\r\n                        <span class=\"hljs-attr\">\"queryTimeOut\"</span>: <span class=\"hljs-number\">1000</span>,\r\n                        <span class=\"hljs-attr\">\"requestAccumulatorInterval\"</span>: <span class=\"hljs-number\">2</span>\r\n                    },\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"mysqlreader\"</span>\r\n                },\r\n                <span class=\"hljs-attr\">\"writer\"</span>: {\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"hbasewriter\"</span>,\r\n                    <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n                        <span class=\"hljs-attr\">\"hbaseConfig\"</span>: {\r\n                            <span class=\"hljs-attr\">\"hbase.zookeeper.property.clientPort\"</span>: <span class=\"hljs-string\">\"2181\"</span>,\r\n                            <span class=\"hljs-attr\">\"hbase.rootdir\"</span>: <span class=\"hljs-string\">\"hdfs://master:9000/hbase\"</span>,\r\n                            <span class=\"hljs-attr\">\"hbase.cluster.distributed\"</span>: <span class=\"hljs-string\">\"true\"</span>,\r\n                            <span class=\"hljs-attr\">\"hbase.zookeeper.quorum\"</span>: <span class=\"hljs-string\">\"master,node1,node2\"</span>,\r\n                            <span class=\"hljs-attr\">\"zookeeper.znode.parent\"</span>: <span class=\"hljs-string\">\"/hbase\"</span>\r\n                        },\r\n                        <span class=\"hljs-attr\">\"table\"</span>: <span class=\"hljs-string\">\"testFlinkx\"</span>,\r\n                        <span class=\"hljs-attr\">\"rowkeyColumn\"</span>: <span class=\"hljs-string\">\"$(cf1:student_id)_$(cf1:course_id)\"</span>,\r\n                        <span class=\"hljs-attr\">\"column\"</span>: [\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"cf1:student_id\"</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            },\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"cf1:course_id\"</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            },\r\n                            {\r\n                                <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"cf1:score\"</span>,\r\n                                <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        <span class=\"hljs-attr\">\"setting\"</span>: {\r\n            <span class=\"hljs-attr\">\"restore\"</span>: {\r\n                <span class=\"hljs-attr\">\"isRestore\"</span>: <span class=\"hljs-literal\">false</span>,\r\n                <span class=\"hljs-attr\">\"isStream\"</span>: <span class=\"hljs-literal\">false</span>\r\n            },\r\n            <span class=\"hljs-attr\">\"errorLimit\"</span>: {},\r\n            <span class=\"hljs-attr\">\"speed\"</span>: {\r\n                <span class=\"hljs-attr\">\"channel\"</span>: <span class=\"hljs-number\">3</span>\r\n            }\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n<ul>\r\n<li>启动hbase 并创建testflinkx表</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs lua\"><span class=\"hljs-built_in\">create</span> <span class=\"hljs-string\">\'testFlinkx\'</span>,<span class=\"hljs-string\">\'cf1\'</span>\r\n</code></pre>\r\n<ul>\r\n<li>启动任务</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs verilog\">flinkx -mode <span class=\"hljs-keyword\">local</span> -job /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/jsonConf/mysqlToHBase<span class=\"hljs-variable\">.json</span> -pluginRoot /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/syncplugins/ -flinkconf /usr/<span class=\"hljs-keyword\">local</span>/<span class=\"hljs-keyword\">soft</span>/flinkx-<span class=\"hljs-number\">1</span><span class=\"hljs-variable\">.10</span>/flinkconf/\r\n</code></pre>\r\n<ul>\r\n<li>查看日志及运行情况同上</li>\r\n</ul>\r\n<h4 id=\"mysqltomysql\">MySQLToMySQL<button class=\"cnblogs-toc-button\" title=\"显示目录导航\" aria-expanded=\"false\"></button></h4>\r\n<ul>\r\n<li>配置文件</li>\r\n</ul>\r\n<pre highlighted=\"true\"><code class=\"hljs json\">{\r\n    <span class=\"hljs-attr\">\"job\"</span>: {\r\n      <span class=\"hljs-attr\">\"content\"</span>: [\r\n        {\r\n          <span class=\"hljs-attr\">\"reader\"</span>: {\r\n            <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"mysqlreader\"</span>,\r\n            <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n              <span class=\"hljs-attr\">\"column\"</span>: [\r\n                {\r\n                  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"id\"</span>,\r\n                  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"int\"</span>\r\n                },\r\n                {\r\n                  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"name\"</span>,\r\n                  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                },\r\n                {\r\n                  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"age\"</span>,\r\n                  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"int\"</span>\r\n                },\r\n                {\r\n                  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"gender\"</span>,\r\n                  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                },\r\n                {\r\n                  <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"clazz\"</span>,\r\n                  <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                }\r\n              ],\r\n              <span class=\"hljs-attr\">\"username\"</span>: <span class=\"hljs-string\">\"root\"</span>,\r\n              <span class=\"hljs-attr\">\"password\"</span>: <span class=\"hljs-string\">\"123456\"</span>,\r\n              <span class=\"hljs-attr\">\"connection\"</span>: [\r\n                {\r\n                  <span class=\"hljs-attr\">\"jdbcUrl\"</span>: [\r\n                    <span class=\"hljs-string\">\"jdbc:mysql://master:3306/student?useSSL=false\"</span>\r\n                  ],\r\n                  <span class=\"hljs-attr\">\"table\"</span>: [\r\n                    <span class=\"hljs-string\">\"student\"</span>\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          },\r\n          <span class=\"hljs-attr\">\"writer\"</span>: {\r\n            <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"mysqlwriter\"</span>,\r\n            <span class=\"hljs-attr\">\"parameter\"</span>: {\r\n              <span class=\"hljs-attr\">\"username\"</span>: <span class=\"hljs-string\">\"root\"</span>,\r\n              <span class=\"hljs-attr\">\"password\"</span>: <span class=\"hljs-string\">\"123456\"</span>,\r\n              <span class=\"hljs-attr\">\"connection\"</span>: [\r\n                {\r\n                  <span class=\"hljs-attr\">\"jdbcUrl\"</span>: <span class=\"hljs-string\">\"jdbc:mysql://master:3306/student?useSSL=false\"</span>,\r\n                  <span class=\"hljs-attr\">\"table\"</span>: [\r\n                    <span class=\"hljs-string\">\"student2\"</span>\r\n                  ]\r\n                }\r\n              ],\r\n              <span class=\"hljs-attr\">\"writeMode\"</span>: <span class=\"hljs-string\">\"insert\"</span>,\r\n              <span class=\"hljs-attr\">\"column\"</span>: [\r\n                {\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"id\"</span>,\r\n                    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"int\"</span>\r\n                  },\r\n                  {\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"name\"</span>,\r\n                    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                  },\r\n                  {\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"age\"</span>,\r\n                    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"int\"</span>\r\n                  },\r\n                  {\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"gender\"</span>,\r\n                    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                  },\r\n                  {\r\n                    <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"clazz\"</span>,\r\n                    <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"string\"</span>\r\n                  }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      <span class=\"hljs-attr\">\"setting\"</span>: {\r\n        <span class=\"hljs-attr\">\"speed\"</span>: {\r\n          <span class=\"hljs-attr\">\"channel\"</span>: <span class=\"hljs-number\">1</span>,\r\n          <span class=\"hljs-attr\">\"bytes\"</span>: <span class=\"hljs-number\">0</span>\r\n        }\r\n      }\r\n    }\r\n  }\r\n</code></pre>\r\n\r\n</div>', '0', '0', '0', '1', '1');
INSERT INTO `app01_article` VALUES ('7', '富商大贾的撒公司发的是', '\n\n\r\n			A+\r\n		\n\r\n			A-\r\n		\n\n\n\n\n\n\n\n泉香而酒冽\n\n\r\n				醉翁之意不在酒，在乎山水之间也。山水之乐，得之心而寓之酒也\r\n			\n\n\n\n\n博客园\n\n\n首页\n\n\n新随笔\n\n\n联系\n\n\n订阅\n\n\n管理\n\n\n(‾◡◝)\n\n\n\n\n\n\n\n\n\n\n\n全网最详细的AbstractQu', '2021-12-12 02:19:20.005600', '<div id=\"page_begin_html\" style=\'margin:0px;padding:0px;font-family:\"font-size:14px;\'>\n<div id=\"divAjustFontSize\" style=\"margin:0px;padding:0px;\">\n<div id=\"divIncreaseFontSize\" style=\"margin:0px;padding:10px 9px;color:white;background-color:indianred;\">\r\n			A+\r\n		</div>\n<div id=\"divDecreaseFontSize\" style=\"margin:0px;padding:10px;color:springgreen;background-color:cornflowerblue;\">\r\n			A-\r\n		</div>\n</div>\n</div>\n<div id=\"home\" style=\"margin:50px auto;padding:30px;background:rgba(255, 255, 255, 0.87);font-family:微软雅黑, 宋体, Arial;font-size:14px;\">\n<div id=\"header\" style=\"margin:10px 0px 0px;padding:0px 0px 5px;\">\n<div id=\"blogTitle\" style=\"margin:0px;padding:0px;\">\n<a href=\"https://www.cnblogs.com/frankiedyz/\" id=\"lnkBlogLogo\"><img alt=\"返回主页\" id=\"blogLogo\" src=\"https://www.cnblogs.com/skins/custom/images/logo.gif\"/></a>\n<h1 class=\"bounceInLeft animated\" style=\"font-size:26px;font-family:inherit;color:inherit;\">\n<a class=\"headermaintitle HeaderMainTitle\" href=\"https://www.cnblogs.com/frankiedyz/\" id=\"Header1_HeaderTitle\">泉香而酒冽</a>\n</h1>\n<h2 class=\"bounceInRight animated\" style=\"font-size:0.928571rem;font-weight:normal;font-family:inherit;color:#757575;\">\r\n				醉翁之意不在酒，在乎山水之间也。山水之乐，得之心而寓之酒也\r\n			</h2>\n</div>\n<div id=\"navigator\" style=\"margin:25px 0px 0px;padding:0px;font-size:13px;\">\n<ul id=\"navList\">\n<li style=\"font-size:20px;\">\n<a class=\"menu\" href=\"https://www.cnblogs.com/\" id=\"blog_nav_sitehome\">博客园</a>\n</li>\n<li style=\"font-size:20px;\">\n<a class=\"menu\" href=\"https://www.cnblogs.com/frankiedyz/\" id=\"blog_nav_myhome\">首页</a>\n</li>\n<li style=\"font-size:20px;\">\n<a class=\"menu\" href=\"https://i.cnblogs.com/EditPosts.aspx?opt=1\" id=\"blog_nav_newpost\">新随笔</a>\n</li>\n<li style=\"font-size:20px;\">\n<a class=\"menu\" href=\"https://msg.cnblogs.com/send/%E9%85%92%E5%86%BD\" id=\"blog_nav_contact\">联系</a>\n</li>\n<li style=\"font-size:20px;\">\n<a class=\"menu\" id=\"blog_nav_rss\">订阅</a>\n</li>\n<li style=\"font-size:20px;\">\n<a class=\"menu\" href=\"https://i.cnblogs.com/\" id=\"blog_nav_admin\">管理</a>\n</li>\n<li style=\"font-size:20px;\">\n<a class=\"blog_nav_tagpage\" href=\"https://www.cnblogs.com/frankiedyz/tag/\">(‾◡◝)</a>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"main\" style=\"margin:30px 0px 0px;padding:0px;\">\n<div id=\"mainContent\" style=\"margin:0px 0px 0px -22em;padding:0px 0px 10px;\">\n<div class=\"forFlow\" style=\"margin:0px 0px 0px 22em;padding:0px;\">\n<div id=\"post_detail\" style=\"margin:0px;padding:0px;\">\n<div id=\"topics\" style=\"margin:0px;padding:0px 0px 10px;\">\n<div class=\"post\" style=\"margin:0px;padding:0px;\">\n<h1 class=\"postTitle\" style=\'font-size:30px;font-family:Lato, \"color:inherit;text-align:center;\'>\n<a class=\"postTitle2 vertical-middle\" href=\"https://www.cnblogs.com/frankiedyz/p/15674098.html\" id=\"cb_post_title_url\"><span style=\"vertical-align:middle;\">全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（二）资源的获取和释放</span> </a>\n</h1>\n<div class=\"clear\" style=\"margin:0px;padding:0px;\">\n</div>\n<div class=\"postBody\" style=\"margin:0px;padding:0px;font-size:16px;\">\n<div class=\"blogpost-body cnblogs-markdown\" id=\"cnblogs_post_body\" style=\"margin:0px 0px 20px;padding:0px;\">\n<blockquote style=\'background:url(\"color:#333333;\'>\n<p>\r\n											上期的<a href=\"https://www.cnblogs.com/frankiedyz/p/15673957.html\" target=\"_blank\">《全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（一）AQS基础》</a>中介绍了什么是AQS，以及AQS的基本结构。有了这些概念做铺垫之后，我们就可以正式地看看AQS是如何通过state（以下也称<strong>资源</strong>）和同步队列，实现线程之间的同步功能了<br/>\r\n那么线程之间是如何同步呢？其实就是通过资源的获取和释放来进行同步。如果获取到就继续运行，获取不到就放入同步队列阻塞等待，释放就是交出获得的资源，并释放同步队列中需要被唤醒的线程。对，就是这么简单！<br/>\r\n本篇我们继续深入AQS内部，一起来看看线程是怎么利用AQS来获取、释放资源的~\r\n										</p>\n</blockquote>\n<h1 id=\"autoid-0-0-0\" style=\"font-size:24px;font-family:inherit;color:inherit;\">\r\n										获取资源\r\n									</h1>\n<p>\r\n										AQS获取资源是通过各种acquire方法。不同acquire方法之间存在区别，如下：\r\n									</p>\n<ul>\n<li>\r\n											acquire：以<strong>互斥模式</strong>获取资源，<strong>忽略中断</strong>\n</li>\n<li>\r\n											acquireInterruptibly：以<strong>互斥模式</strong>获取资源，<strong>响应中断</strong>\n</li>\n<li>\r\n											acquireShared：以<strong>共享模式</strong>获取资源，<strong>忽略中断</strong>\n</li>\n<li>\r\n											acquireSharedInterruptibly：以<strong>共享模式</strong>获取资源，<strong>响应中断</strong>\n</li>\n</ul>\n<h2 id=\"autoid-1-0-0\" style=\"font-size:21px;font-family:inherit;color:inherit;\">\r\n										获取互斥资源\r\n									</h2>\r\n \r\n									<h3 id=\"autoid-1-1-0\" style=\"font-size:18px;font-family:inherit;color:inherit;\">\r\n										忽略中断的acquire方法\r\n									</h3>\n<p>\r\n										acquire方法是<strong>获取互斥资源，忽略中断</strong>。如果获取成功，直接返回，否则该线程会进入同步队列阻塞等待。源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">public</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">acquire</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (!tryAcquire(arg) &amp;&amp;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													acquireQueued(addWaiter(Node.EXCLUSIVE), arg))\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													selfInterrupt();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										acquire是一个<strong>模板方法</strong>，定义为<strong>final方法</strong>防止子类重写。其中的<strong>钩子方法</strong>tryAcquire需要子类去实现。<br/>\r\n如果tryAcquire返回true，说明尝试获取成功，直接返回即可。如果tryAcquire返回false，说明尝试获取失败，会调用addWaiter方法进入等待队列。该方法的解析见上一篇博客<a href=\"https://www.cnblogs.com/frankiedyz/p/15673957.html\" target=\"_blank\">《全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（一）AQS基础》</a>。当该线程处于同步队列中（queued），就会调用acquireQueued方法\r\n									</p>\n<p>\r\n										acquireQueued方法为一个<strong>已经位于同步队列</strong>的线程，以<strong>互斥模式</strong>获取资源，<strong>不响应中断</strong>但是会<strong>记录中断状态</strong>。源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> <span class=\"hljs-title\" style=\"color:#A31515;\">acquireQueued</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> Node node, <span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> failed = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">try</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> interrupted = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">for</span> (;;) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> Node p = node.predecessor(); <span class=\"hljs-comment\" style=\"color:#008000;\">// 获取node的前一个节点</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (p == head &amp;&amp; tryAcquire(arg)) { <span class=\"hljs-comment\" style=\"color:#008000;\">// 如果p是head，说明node是队列头，可以竞争资源</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													setHead(node); <span class=\"hljs-comment\" style=\"color:#008000;\">// 将node出队</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													p.next = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span>; <span class=\"hljs-comment\" style=\"color:#008000;\">// help GC</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													failed = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span> interrupted;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													parkAndCheckInterrupt())\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													interrupted = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													} <span class=\"hljs-keyword\" style=\"color:#0000FF;\">finally</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (failed)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													cancelAcquire(node);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										在acquireQueued方法代码主要都包含在一个for循环中。如果发现node是队首节点，就会再次尝试获取资源。如果此时获取成功，就直接出队并返回，不用阻塞等待，这里<strong>体现了同步队列先进先出的特点</strong><br/>\r\n如果不是队首节点，或者是再次尝试获取资源又双叒叕失败了，则调用shouldParkAfterFailedAcquire方法判断当前线程是否应该被阻塞<em>（在这里打一个断点）</em>\n</p>\n<p>\r\n										shouldParkAfterFailedAcquire方法会检查当前线程是否应该被阻塞，如果是就返回true，否则返回false。其源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 调用此方法必须保证pred是node的直接前驱，即node.prev == pred</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">private</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">static</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> <span class=\"hljs-title\" style=\"color:#A31515;\">shouldParkAfterFailedAcquire</span><span class=\"hljs-params\">(Node pred, Node node)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> ws = pred.waitStatus;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (ws == Node.SIGNAL)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">/*</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\"> * This node has already set status asking a release</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\"> * to signal it, so it can safely park.</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\"> */</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (ws &gt; <span class=\"hljs-number\">0</span>) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 如果前面的Node都被cancel了，那么就跳过这些Node</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">do</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													node.prev = pred = pred.prev;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													} <span class=\"hljs-keyword\" style=\"color:#0000FF;\">while</span> (pred.waitStatus &gt; <span class=\"hljs-number\">0</span>);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													pred.next = node;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													} <span class=\"hljs-keyword\" style=\"color:#0000FF;\">else</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">/*</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\"> * waitStatus must be 0 or PROPAGATE.  Indicate that we</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\"> * need a signal, but don\'t park yet.  Caller will need to</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\"> * retry to make sure it cannot acquire before parking.</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\"> */</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													compareAndSetWaitStatus(pred, ws, Node.SIGNAL);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										只有当node的直接前驱节点状态是SIGNAL时，才会认为该线程应该被阻塞。否则还需要回到acquireQueued的for循环中重新检查，不会立即阻塞\r\n									</p>\n<p>\r\n										我画了一张shouldParkAfterFailedAcquire的<strong>执行流程图</strong>，如下：\r\n									</p>\n<div align=\"center\" style=\"margin:0px;padding:0px;\">\n<img class=\"medium-zoom-image\" src=\"https://img2020.cnblogs.com/blog/1251623/202112/1251623-20211210221229169-1331806379.png\" style=\"height:auto;\"/>\n</div>\n<blockquote style=\'background:url(\"color:#333333;\'>\n<p>\r\n											那么会不会有一种可能：shouldParkAfterFailedAcquire方法一直返回false，始终认为该线程不应该阻塞，那么该线程就会一直占用CPU资源，<strong>“忙等”</strong><br/>\r\n其实一般来说是不会的，原因见上面示意图中的紫色文字部分\r\n										</p>\n</blockquote>\n<p>\r\n										再回到acquireQueued方法中，如果shouldParkAfterFailedAcquire判断该线程，并返回了true，就需要执行parkAndCheckInterrupt将该线程阻塞，源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">private</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> <span class=\"hljs-title\" style=\"color:#A31515;\">parkAndCheckInterrupt</span><span class=\"hljs-params\">()</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													LockSupport.park(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">this</span>);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span> Thread.interrupted();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										在parkAndCheckInterrupt中借助了工具类LockSuppport将线程阻塞。阻塞过程中如果该线程被设置了中断状态，虽然中断不会导致阻塞立即被唤醒，但是线程的中断状态会被记录下来，并作为该方法的返回值\r\n									</p>\n<p>\r\n										总体来说，acquireQueued方法的<strong>执行流程</strong>如下图所示：\r\n									</p>\n<div align=\"center\" style=\"margin:0px;padding:0px;\">\n<img class=\"medium-zoom-image\" src=\"https://img2020.cnblogs.com/blog/1251623/202112/1251623-20211210222414680-1615968315.png\" style=\"height:auto;\"/>\n</div>\n<p>\r\n										再回到acquire方法中。如果acquire失败而阻塞等待的过程中被中断，那么等它被唤醒并成功获得资源之后，会立即调用setInterrupt方法设置线程的中断状态。setInterrupt的源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">static</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">selfInterrupt</span><span class=\"hljs-params\">()</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													Thread.currentThread().interrupt();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										最后补充一点，acquire方法除了会在线程获取互斥资源时被调用，也会被条件等待方法<strong>await</strong>方法调用，具体分析见本系列最后一期博客<a href=\"https://www.cnblogs.com/frankiedyz/p/15676704.html\" target=\"_blank\">《全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（三）条件变量》</a>\n</p>\n<h3 id=\"autoid-1-1-1\" style=\"font-size:18px;font-family:inherit;color:inherit;\">\r\n										响应中断的acquireInterruptibly方法\r\n									</h3>\n<p>\r\n										acquireInterruptibly用于<strong>获取互斥资源</strong>。顾名思义，这个方法<strong>响应中断</strong>，即如果在调用过程中发生了中断，会<strong>抛出中断异常</strong>，中止资源的获取。其源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">public</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">acquireInterruptibly</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">throws</span> InterruptedException </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (Thread.interrupted())\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">throw</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">new</span> InterruptedException();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (!tryAcquire(arg))\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													doAcquireInterruptibly(arg);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										acquireInterruptibly方法首先会检查中断状态，如果没有发生中断，才会继续向下执行，否则抛出中断异常<br/>\r\n接下来执行<strong>钩子方法</strong>tryAcquire，如果获取成功则直接返回，否则获取失败，执行doAcquireInterruptibly方法：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">private</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">doAcquireInterruptibly</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">throws</span> InterruptedException </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> Node node = addWaiter(Node.EXCLUSIVE);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> failed = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">try</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">for</span> (;;) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> Node p = node.predecessor();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (p == head &amp;&amp; tryAcquire(arg)) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													setHead(node);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													p.next = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span>; <span class=\"hljs-comment\" style=\"color:#008000;\">// help GC</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													failed = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													parkAndCheckInterrupt())\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">throw</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">new</span> InterruptedException();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													} <span class=\"hljs-keyword\" style=\"color:#0000FF;\">finally</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (failed)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													cancelAcquire(node);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										doAcquireInterruptibly会先调用addWaiter方法，将当前线程加入队尾。之后的逻辑和acquireQueued类似，就是在for循环中，先判断当前节点是否是头节点，如果是则<strong>再次</strong>尝试获取资源。如果不是队首或者获取失败，则调用shouldParkAfterFailedAcquire方法判断该线程是否应该被阻塞。如果不是就进入下一轮循环。如果需要被阻塞，则调用parkAndCheckInterrupt方法将其阻塞。如果阻塞过程中发生中断，则当该线程被唤醒后回到doAcquireInterruptibly中，会抛出中断异常，并调用cancelAcquire执行取消节点的逻辑\r\n									</p>\n<p>\r\n										doAcquireInterruptibly和acquireQueued的区别有两点：\r\n									</p>\n<ul>\n<li>\r\n											acquireQueued调用之前，当前线程就已经被放入同步队列；而doAcquireInterruptibly没有，需要自己调用addWaiter方法\r\n										</li>\n<li>\r\n											acquireQueued中不会因发生中断而抛出中断异常、取消节点，只会<strong>记录</strong>是否发生中断并返回；而doAcquireInterruptibly会响应中断，抛出中断异常，并<strong>取消</strong>该线程对应的节点\r\n										</li>\n</ul>\n<div id=\"signatureInline\" style=\"margin:0px;padding:6px;border:1px dashed silver;background-color:rgba(0, 0, 0, 0);font-size:2px;font-family:微软雅黑;\">\r\n										作者：<a href=\"https://www.cnblogs.com/frankiedyz/\" target=\"_blank\">酒冽</a>        出处：<a href=\"https://www.cnblogs.com/frankiedyz/p/15674098.html\">https://www.cnblogs.com/frankiedyz/p/15674098.html</a><br/>\r\n版权：本文版权归作者和博客园共有<br/>\r\n转载：欢迎转载，但未经作者同意，必须保留此段声明；必须在文章中给出原文连接；否则<strong>必究法律责任</strong>\n</div>\n<h2 id=\"autoid-1-1-2\" style=\"font-size:21px;font-family:inherit;color:inherit;\">\r\n										获取共享资源\r\n									</h2>\r\n \r\n									<h3 id=\"autoid-1-2-0\" style=\"font-size:18px;font-family:inherit;color:inherit;\">\r\n										忽略中断的acquireShared方法\r\n									</h3>\n<p>\r\n										acquireShared是以共享模式获取资源，并且忽略中断。源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">public</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">acquireShared</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (tryAcquireShared(arg) &lt; <span class=\"hljs-number\">0</span>)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													doAcquireShared(arg);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										该方法首先会调用钩子方法tryAcquireShared尝试获取共享资源，如果获取成功则直接返回，否则获取失败，调用doAcquireShared方法：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">private</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">doAcquireShared</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> Node node = addWaiter(Node.SHARED);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> failed = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">try</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> interrupted = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">for</span> (;;) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> Node p = node.predecessor();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (p == head) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> r = tryAcquireShared(arg);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (r &gt;= <span class=\"hljs-number\">0</span>) { <span class=\"hljs-comment\" style=\"color:#008000;\">// 表示tryAcquireShared获取成功</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 设置head，并判断是否需要唤醒后继线程。如果需要则唤醒，并保证传播</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													setHeadAndPropagate(node, r);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													p.next = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span>; <span class=\"hljs-comment\" style=\"color:#008000;\">// help GC</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (interrupted)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													selfInterrupt();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													failed = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													parkAndCheckInterrupt())\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													interrupted = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													} <span class=\"hljs-keyword\" style=\"color:#0000FF;\">finally</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (failed)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													cancelAcquire(node);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										这里也会调用addWaiter将当前线程加入同步队列，不过这里的Node是共享模式（Node.SHARED）<br/>\r\n在接下来的for循环中，如果当前线程位于队首，则再次尝试获取资源。如果获取成功，则调用setHeadAndPropagate方法，处理中断之后返回\r\n									</p>\n<p>\r\n										其中setHeadAndPropagate方法的作用是弹出队头，并检测其后继节点是否需要被唤醒，如果需要的话就唤醒，并确保传播。源码如下；\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">private</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">setHeadAndPropagate</span><span class=\"hljs-params\">(Node node, <span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> propagate)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													Node h = head; <span class=\"hljs-comment\" style=\"color:#008000;\">// Record old head for check below</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													setHead(node);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 这个复杂的if条件判断就是用于判断：后继节点的线程是否要被唤醒</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// propagate &gt; 0 表示允许后续节点继续获取共享资源</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (propagate &gt; <span class=\"hljs-number\">0</span> || h == <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span> || h.waitStatus &lt; <span class=\"hljs-number\">0</span> ||\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													(h = head) == <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span> || h.waitStatus &lt; <span class=\"hljs-number\">0</span>) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													Node s = node.next;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (s == <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span> || s.isShared())\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													doReleaseShared(); <span class=\"hljs-comment\" style=\"color:#008000;\">// 唤醒后继的共享模式的线程，并确保状态传播下去</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										在共享模式下，一个线程获取资源成功后，可能会引起<strong>后继</strong>等待获取共享资源的线程。<em>注意，这里是后继而非同步队列中所有后面的。</em>在这一点上，不同于互斥资源的获取，共享资源的获取更像是<em>一人得道，鸡犬升天</em>\n</p>\n<p>\r\n										如果在setHeadAndPropagate中发现后继有线程需要被释放，则调用doReleaseShared方法将它释放，并确保传播，它也是releaseShared方法的核心，该方法会在后面讲解释放共享资源时给出解析，这里暂时不分析\r\n									</p>\n<blockquote style=\'background:url(\"color:#333333;\'>\n<p>\r\n											确保传播的含义:<br/>\r\n保证被唤醒的线程可以继续唤醒它的后继线程。如果每个线程都能确保传播，那么所有应该被释放的后继线程都能得到释放\r\n										</p>\n</blockquote>\n<p>\r\n										总的来说，acquireShared的流程与acquire基本一致，最大的区别在于：<strong>获取共享资源成功后，可能需要唤醒后继的多个线程。而获取互斥资源成功后，不需要唤醒其他任何线程</strong>\n</p>\n<h3 id=\"autoid-1-2-1\" style=\"font-size:18px;font-family:inherit;color:inherit;\">\r\n										响应中断的acquireSharedInterruptibly方法\r\n									</h3>\n<p>\r\n										acquireSharedInterruptibly方法用于获取共享资源，但是该方法会响应中断，即在获取过程中接收到中断信号，会抛出中断异常。其源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">public</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">acquireSharedInterruptibly</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">throws</span> InterruptedException </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (Thread.interrupted())\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">throw</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">new</span> InterruptedException();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (tryAcquireShared(arg) &lt; <span class=\"hljs-number\">0</span>)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													doAcquireSharedInterruptibly(arg);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										和acquireInterruptibly一样，acquireSharedInterruptibly也会先检查线程的中断状态是否已经被设置。如果设置则直接抛出中断异常<br/>\r\n接下来会调用钩子方法tryAcquireShared尝试获取共享资源，获取成功则直接返回，获取失败就会调用doAcquireSharedInterruptibly方法：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">private</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">doAcquireSharedInterruptibly</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">throws</span> InterruptedException </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> Node node = addWaiter(Node.SHARED);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> failed = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">try</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">for</span> (;;) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> Node p = node.predecessor();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (p == head) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> r = tryAcquireShared(arg);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (r &gt;= <span class=\"hljs-number\">0</span>) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													setHeadAndPropagate(node, r);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													p.next = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span>; <span class=\"hljs-comment\" style=\"color:#008000;\">// help GC</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													failed = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													parkAndCheckInterrupt())\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">throw</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">new</span> InterruptedException();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													} <span class=\"hljs-keyword\" style=\"color:#0000FF;\">finally</span> {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (failed)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													cancelAcquire(node);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										不多解释，直接上图吧！下面是doAcquireSharedInterruptibly方法的执行流程图：\r\n									</p>\n<div align=\"center\" style=\"margin:0px;padding:0px;\">\n<img class=\"medium-zoom-image\" src=\"https://img2020.cnblogs.com/blog/1251623/202112/1251623-20211211121050608-654947209.png\" style=\"height:auto;\"/>\n</div>\n<p>\r\n										doAcquireSharedInterruptibly方法和doAcquireShared方法大体上差不多，区别仅在于<strong>前者响应中断并会抛出中断异常，而后者忽略中断，只记录中断状态并返回</strong>\n</p>\n<div id=\"signatureInline\" style=\"margin:0px;padding:6px;border:1px dashed silver;background-color:rgba(0, 0, 0, 0);font-size:2px;font-family:微软雅黑;\">\r\n										作者：<a href=\"https://www.cnblogs.com/frankiedyz/\" target=\"_blank\">酒冽</a>        出处：<a href=\"https://www.cnblogs.com/frankiedyz/p/15674098.html\">https://www.cnblogs.com/frankiedyz/p/15674098.html</a><br/>\r\n版权：本文版权归作者和博客园共有<br/>\r\n转载：欢迎转载，但未经作者同意，必须保留此段声明；必须在文章中给出原文连接；否则<strong>必究法律责任</strong>\n</div>\n<h1 id=\"autoid-1-2-2\" style=\"font-size:24px;font-family:inherit;color:inherit;\">\r\n										释放资源\r\n									</h1>\n<p>\r\n										AQS释放资源是通过各种release方法。不同release之间存在区别，如下：\r\n									</p>\n<ul>\n<li>\r\n											release：以<strong>独占模式</strong>释放对象\r\n										</li>\n<li>\r\n											releaseShared：以<strong>共享模式</strong>释放对象\r\n										</li>\n</ul>\n<p>\r\n										release不存在响应中断的区别，都是忽略中断的，因为线程在释放资源的时候被中断可能引起意外的错误\r\n									</p>\n<h2 id=\"autoid-2-0-0\" style=\"font-size:21px;font-family:inherit;color:inherit;\">\r\n										释放互斥资源\r\n									</h2>\n<p>\r\n										AQS使用release方法释放<strong>互斥资源</strong>，源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">public</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> <span class=\"hljs-title\" style=\"color:#A31515;\">release</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (tryRelease(arg)) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													Node h = head;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (h != <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span> &amp;&amp; h.waitStatus != <span class=\"hljs-number\">0</span>)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													unparkSuccessor(h);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										该方法会先调用<strong>钩子方法</strong>tryRelease，如果释放失败则直接返回false，如果释放成功，则调用unparkSuccessor方法唤醒<strong>队首线程</strong>，并返回true\r\n									</p>\n<p>\r\n										unparkSuccessor方法是唤醒线程的主要逻辑。源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">private</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">unparkSuccessor</span><span class=\"hljs-params\">(Node node)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 如果status &lt; 0（表明可能需要signal），先清除状态（设为0）</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> ws = node.waitStatus;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (ws &lt; <span class=\"hljs-number\">0</span>)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													compareAndSetWaitStatus(node, ws, <span class=\"hljs-number\">0</span>);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 一般来说后继需要unpark的节点就是next节点</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 但是如果next被cancel或为null，则需要从后向前遍历，直到找到有效的后继节点</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													Node s = node.next;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (s == <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span> || s.waitStatus &gt; <span class=\"hljs-number\">0</span>) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													s = <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">for</span> (Node t = tail; t != <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span> &amp;&amp; t != node; t = t.prev)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (t.waitStatus &lt;= <span class=\"hljs-number\">0</span>)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													s = t;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (s != <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span>)\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													LockSupport.unpark(s.thread);\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										该方法的作用是唤醒node的<strong>有效</strong>后继节点。<em>有效指的是跳过那些被cancel的节点。</em> 由于同步队列是FIFO的，所以node一定是head\r\n									</p>\n<div id=\"signatureInline\" style=\"margin:0px;padding:6px;border:1px dashed silver;background-color:rgba(0, 0, 0, 0);font-size:2px;font-family:微软雅黑;\">\r\n										作者：<a href=\"https://www.cnblogs.com/frankiedyz/\" target=\"_blank\">酒冽</a>        出处：<a href=\"https://www.cnblogs.com/frankiedyz/p/15674098.html\">https://www.cnblogs.com/frankiedyz/p/15674098.html</a><br/>\r\n版权：本文版权归作者和博客园共有<br/>\r\n转载：欢迎转载，但未经作者同意，必须保留此段声明；必须在文章中给出原文连接；否则<strong>必究法律责任</strong>\n</div>\n<h2 id=\"autoid-2-1-0\" style=\"font-size:21px;font-family:inherit;color:inherit;\">\r\n										释放共享资源\r\n									</h2>\n<p>\r\n										releaseShared用于释放<strong>共享资源</strong>，源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">public</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">final</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">boolean</span> <span class=\"hljs-title\" style=\"color:#A31515;\">releaseShared</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> arg)</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (tryReleaseShared(arg)) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													doReleaseShared();\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">true</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">return</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">false</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										该方法首先调用<strong>钩子方法</strong>tryReleaseShared尝试释放资源，如果失败则直接返回false，如果成功则执行doReleaseShared方法<strong>唤醒后继的其他共享模式线程同时确保传播</strong>，最后返回true\r\n									</p>\n<p>\r\n										doReleaseShared方法在前面的acquireShared -&gt; setHeadAndPropagate中出现过，该方法的作用是在共享模式下<strong>唤醒后继线程</strong>，并<strong>确保传播</strong>。其源码如下：\r\n									</p>\n<pre>\r\n									<table class=\"hljs-ln\" style=\"margin:0px;padding:0px;\">\r\n										\r\n										<tbody>\r\n											\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color:#0000FF;\">private</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">void</span> <span class=\"hljs-title\" style=\"color:#A31515;\">doReleaseShared</span><span class=\"hljs-params\">()</span> </span>{\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">for</span> (;;) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													Node h = head;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (h != <span class=\"hljs-keyword\" style=\"color:#0000FF;\">null</span> &amp;&amp; h != tail) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">int</span> ws = h.waitStatus;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (ws == Node.SIGNAL) {\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 如果需要，则唤醒后继线程，同时设置waitStatus为0</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (!compareAndSetWaitStatus(h, Node.SIGNAL, <span class=\"hljs-number\">0</span>))\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">continue</span>; <span class=\"hljs-comment\" style=\"color:#008000;\">// loop to recheck cases</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													unparkSuccessor(h); <span class=\"hljs-comment\" style=\"color:#008000;\">// 唤醒后继线程</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">else</span> <span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (ws == <span class=\"hljs-number\">0</span> &amp;&amp; !compareAndSetWaitStatus(h, <span class=\"hljs-number\">0</span>, Node.PROPAGATE)) <span class=\"hljs-comment\" style=\"color:#008000;\">// 设置PROPAGATE状态，保证唤醒可以传播下去</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">continue</span>; <span class=\"hljs-comment\" style=\"color:#008000;\">// loop on failed CAS</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-comment\" style=\"color:#008000;\">// 如果上述的执行过程没有被别的线程打扰，那就退出，否则重新loop</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">if</span> (h == head) <span class=\"hljs-comment\" style=\"color:#008000;\">// loop if head changed</span>\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													<span class=\"hljs-keyword\" style=\"color:#0000FF;\">break</span>;\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n											<tr>\r\n												\r\n												<td class=\"hljs-ln-line hljs-ln-numbers\" style=\"border:none;text-align:center;vertical-align:top;color:#BFBFBF;\">\r\n													\r\n													<div class=\"hljs-ln-n\" style=\"margin:0px;padding:0px;\">\r\n														\r\n													</div>\r\n\r\n												</td>\r\n\r\n												<td class=\"hljs-ln-line hljs-ln-code\" style=\"border:none;\">\r\n													}\r\n												</td>\r\n\r\n											</tr>\r\n\r\n										</tbody>\r\n\r\n									</table>\r\n</pre>\n<p>\r\n										最后来做个总结：\r\n									</p>\n<p>\r\n										AQS针对互斥资源、共享资源的获取和释放，提供了不同的方法。而获取资源的方法也可以分为响应中断和忽略中断，释放资源都是忽略中断的\r\n									</p>\n<p>\r\n										AQS正是通过<strong>资源</strong> （state）的释放和获取，配合<strong>同步队列</strong>让线程排队等待，以FIFO的方式让竞争资源失败的线程阻塞、唤醒\r\n									</p>\n<p>\r\n										这些释放、获取方法都是AQS提供给子类去调用的模板方法，其中的一些关键步骤均设计为了钩子方法，让子类可以个性化定制\r\n									</p>\n<p>\r\n										正是有了AQS这个强大的后盾，才能诞生出那么多实用的并发同步工具类。不得不说，AQS是真的牛啊\r\n									</p>\n<blockquote style=\'background:url(\"color:#333333;\'>\n<p>\r\n											好了，能看到这里的读者，相信已经掌握了AQS的基本结构，以及AQS是获取、释放资源的原理<br/>\r\n我这里其实并没有剖析所有AQS提供的资源获取方法，还有两个可超时方法tryAcquireNanos、tryAcquireSharedNanos没有讲解，但是基本上和其他获取资源方法是类似的，只是多了一个<strong>超时而取消</strong>的逻辑，感兴趣的读者可以打开AQS源码自己分析<br/>\r\n接下来的就是AQS的最后一篇了，我们来看看AQS里面的条件队列是怎么实现的\r\n										</p>\n</blockquote>\n</div>\n<div id=\"MySignature\" style=\"margin:37px 0px;padding:10px;font-size:15px;\">\n<strong>愿归来仍是少年！</strong>\n<div style=\"margin:0px;padding:0px;font-size:12px;font-family:微软雅黑;\">\r\n										    作者：<a href=\"https://www.cnblogs.com/frankiedyz/\" target=\"_blank\">酒冽</a><br/>\r\n    出处：<a href=\"https://www.cnblogs.com/frankiedyz/p/15674098.html\" target=\"_blank\">https://www.cnblogs.com/frankiedyz/p/15674098.html</a><br/>\r\n    版权：本文版权归作者和博客园共有<br/>\r\n    转载：欢迎转载，但未经作者同意，必须保留此段声明；必须在文章中给出原文连接；否则<strong>必究法律责任</strong>\n</div>\n</div>\n<div class=\"clear\" style=\"margin:0px;padding:0px;\">\n</div>\n<div id=\"blog_post_info_block\" style=\"margin:20px 0px 0px;padding:0px;\">\n<div id=\"BlogPostCategory\" style=\"margin:0px 0px 10px;padding:0px;color:#666666;\">\r\n										分类: <a href=\"https://www.cnblogs.com/frankiedyz/category/2075327.html\" target=\"_blank\">JUC源码阅读</a>\n</div>\n<div id=\"EntryTag\" style=\"margin:20px 0px 0px;padding:0px;font-size:9pt;color:#666666;\">\r\n										标签: <a href=\"https://www.cnblogs.com/frankiedyz/tag/Java/\">Java</a>, <a href=\"https://www.cnblogs.com/frankiedyz/tag/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/\">并发编程</a>, <a href=\"https://www.cnblogs.com/frankiedyz/tag/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/\">源码阅读</a>\n</div>\n<div id=\"blog_post_info\" style=\"margin:0px;padding:0px;\">\n<div id=\"green_channel\" style=\"margin:10px 0px;padding:10px 0px;border:1px dashed #C0C0C0;font-size:12px;text-align:center;\">\n<a id=\"green_channel_digg\">好文要顶</a> <a id=\"green_channel_follow\">关注我</a> <a id=\"green_channel_favorite\">收藏该文</a> <a id=\"green_channel_weibo\"><img alt=\"\" src=\"https://common.cnblogs.com/images/icon_weibo_24.png\"/></a> <a id=\"green_channel_wechat\"><img alt=\"\" src=\"https://common.cnblogs.com/images/wechat.png\" style=\"width:24px;height:24px;\"/></a>\n</div>\n<div id=\"author_profile\" style=\"margin:0px 0px 10px;padding:0px;font-size:12px;\">\n<div class=\"author_profile_info\" id=\"author_profile_info\" style=\"margin:0px;padding:0px;\">\n<a href=\"https://home.cnblogs.com/u/frankiedyz/\" target=\"_blank\"><img alt=\"\" class=\"author_avatar\" src=\"https://pic.cnblogs.com/face/1251623/20211117001501.png\"/></a>\n<div class=\"author_profile_info\" id=\"author_profile_detail\" style=\"margin:0px;padding:0px;\">\n<a href=\"https://home.cnblogs.com/u/frankiedyz/\">酒冽</a><br/>\n<a href=\"https://home.cnblogs.com/u/frankiedyz/followees/\">关注 - 1</a><br/>\n<a href=\"https://home.cnblogs.com/u/frankiedyz/followers/\">粉丝 - 1</a>\n</div>\n</div>\n<div class=\"clear\" style=\"margin:0px;padding:0px;\">\n</div>\n<div id=\"author_profile_honor\" style=\"margin:0px;padding:0px;\">\n</div>\n<div id=\"author_profile_follow\" style=\"margin:0px;padding:0px;\">\n<a>+加关注</a>\n</div>\n</div>\n<div id=\"div_digg\" style=\"margin:10px 30px 10px 0px;padding:0px;font-size:12px;text-align:center;\">\n<div class=\"diggit\" style=\'margin:2px 0px 0px;padding:5px 0px 0px;background:url(\"\'>\n<span class=\"diggnum\" id=\"digg_count\" style=\"font-size:14px;color:#075DB3;font-family:Verdana;line-height:1.5em !important;\">0</span>\n</div>\n<div class=\"buryit\" style=\'margin:2px 0px 0px 20px;padding:5px 0px 0px;background:url(\"\'>\n<span class=\"burynum\" id=\"bury_count\" style=\"font-size:14px;color:#075DB3;font-family:Verdana;line-height:1.5em !important;\">0</span>\n</div>\n<div class=\"clear\" style=\"margin:0px;padding:0px;\">\n</div>\n<div class=\"diggword\" id=\"digg_tips\" style=\"margin:5px 0px 0px;padding:0px;color:#808080;\">\n</div>\n</div>\n</div>\n<div class=\"clear\" style=\"margin:0px;padding:0px;\">\n</div>\n<div id=\"post_next_prev\" style=\"margin:0px;padding:0px;font-size:12px;\">\n<a class=\"p_n_p_prefix\" href=\"https://www.cnblogs.com/frankiedyz/p/15673957.html\">« </a>上一篇： <a href=\"https://www.cnblogs.com/frankiedyz/p/15673957.html\">全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（一）AQS基础</a>\n</div>\n</div>\n</div>\n<div class=\"postDesc\" style=\"margin:5px 0px 0px;padding:0px 5px 0px 0px;font-size:13px;background:none;color:#666666;\">\r\n								posted @ <span id=\"post-date\">2021-12-12 09:53</span>  <a href=\"https://www.cnblogs.com/frankiedyz/\">酒冽</a>  阅读(<span id=\"post_view_count\">11</span>)  评论(<span id=\"post_comment_count\">0</span>)  <a href=\"https://i.cnblogs.com/EditPosts.aspx?postid=15674098\">编辑</a>  <a>收藏</a>  <a>举报</a>\n</div>\n</div>\n</div>\n</div>\n<a name=\"!comments\"></a>\n<div class=\"commentform\" id=\"comment_form\" style=\"margin:0px;padding:0px;\">\n<a name=\"commentform\"></a>\n<div id=\"divCommentShow\" style=\"margin:0px;padding:0px;\">\n</div>\n<div id=\"comment_nav\" style=\"margin:0px;padding:0px;text-align:right;\">\n<span id=\"span_refresh_tips\"></span><a id=\"lnk_RefreshComments\">刷新评论</a><a href=\"https://www.cnblogs.com/frankiedyz/p/15674098.html#\">刷新页面</a><a href=\"https://www.cnblogs.com/frankiedyz/p/15674098.html#top\">返回顶部</a>\n</div>\n<div id=\"comment_form_container\" style=\"margin:0px;padding:0px;\">\n<div id=\"commentform_title\" style=\'margin:10px 0px 30px;padding:0px;font-size:16px;font-family:\"\'>\r\n							发表评论\r\n						</div>\n<span id=\"tip_comment\" style=\"color:red;\"></span>\n<div class=\"commentbox_main comment_textarea\" style=\"margin:0px 0px 10px;padding:8px 14px;background:transparent;border:1px solid #DDDDDD;font-size:13px;color:#555555;\">\n<div class=\"commentbox_title\" style=\"margin:0px;padding:0px;\">\n<div class=\"commentbox_title_left\" style=\"margin:0px;padding:0px;font-size:14px;\">\n<span class=\"commentbox_tab active\" id=\"btn_edit_comment\" style=\"line-height:28px;color:#000000;\">编辑</span><span class=\"commentbox_tab\" id=\"btn_preview_comment\" style=\"line-height:28px;color:#707070;\">预览</span>\n</div>\n<div class=\"commentbox_title_right\" style=\"margin:0px 0px 5px;padding:0px;\">\n<span class=\"comment_icon\" id=\"ubb_bold\"></span><span class=\"comment_icon\" id=\"ubb_url\"></span><span class=\"comment_icon\" id=\"ubb_code\"></span><span class=\"comment_icon\" id=\"ubb_quote\"></span><span class=\"comment_icon\" id=\"ubb_img\"></span>\n</div>\n</div>\n<div class=\"commentbox_footer\" style=\"margin:0px;padding:10px 0px 0px;\">\n<span> </span><span class=\"comment_option\" id=\"ubb_auto_completion\" style=\"background:none;color:#808080;\"> <span class=\"inline_middle\" style=\"vertical-align:middle;\">自动补全</span></span>\n</div>\n</div>\n<p id=\"commentbox_opt\">\r\n							 <a>退出</a> <a id=\"commentbox_opt_sub\">订阅评论</a> <a href=\"https://www.cnblogs.com/simon1993/\" target=\"_blank\">我的博客</a>\n</p>\n<div id=\"tip_comment2\" style=\"margin:0px;padding:0px;color:red;\">\n</div>\n<p>\r\n							[Ctrl+Enter快捷键提交]\r\n						</p>\n</div>\n<div class=\"ad_text_commentbox\" id=\"ad_text_under_commentbox\" style=\"margin:5px 0px;padding:0px;\">\n</div>\n<div id=\"cnblogs_ch\" style=\"margin:5px 0px 0px;padding:0px;\">\n<a href=\"https://brands.cnblogs.com/huawei\" target=\"_blank\">【推荐】华为开发者专区，与开发者一起构建万物互联的智能世界</a><br/>\n<a href=\"http://www.uccpsoft.com/index.htm\" target=\"_blank\">【推荐】跨平台组态\\工控\\仿真\\CAD 50万行C++源码全开放免费下载！</a><br/>\n<a href=\"https://brands.cnblogs.com/huawei/p/2730\" target=\"_blank\">【推荐】华为 HMS Core 线上 Codelabs 挑战赛第4期，探索“智”感生活</a><br/>\n</div>\n<div id=\"opt_under_post\" style=\"margin:0px;padding:0px;\">\n</div>\n<div class=\"under-post-card\" id=\"cnblogs_c1\" style=\"margin:10px 0px 0px;padding:0px;\">\n<div id=\"div-gpt-ad-1592365906576-0\" style=\"margin:0px;padding:0px;\">\n<div id=\"google_ads_iframe_/1090369/C1_0__container__\" style=\"margin:0px;padding:0px;border:0pt none;\">\n<iframe frameborder=\"0\" height=\"250\" id=\"google_ads_iframe_/1090369/C1_0\" width=\"300\">\n</iframe>\n</div>\n</div>\n</div>\n<div id=\"under_post_card1\" style=\"margin:0px;padding:0px;\">\n<div class=\"under-post-card\" style=\"margin:10px 0px 0px;padding:0px;\">\n<b>编辑推荐：</b><br/>\r\n· <a href=\"https://www.cnblogs.com/myshowtime/p/15666336.html\" target=\"_blank\">「译」 .NET 6 中 gRPC 的新功能</a><br/>\r\n· <a href=\"https://www.cnblogs.com/wzh2010/p/13874211.html\" target=\"_blank\">一次缓存雪崩的灾难复盘</a><br/>\r\n· <a href=\"https://www.cnblogs.com/wanghao72214/p/15659718.html\" target=\"_blank\">如何在 ASP.NET Core 中构建轻量级服务</a><br/>\r\n· <a href=\"https://www.cnblogs.com/xiaoxiaotank/p/15657240.html\" target=\"_blank\">理解ASP.NET Core - 模型绑定&amp;验证</a><br/>\r\n· <a href=\"https://www.cnblogs.com/stulzq/p/15650277.html\" target=\"_blank\">[翻译].NET 6 中的 dotnet monitor</a><br/>\n</div>\n</div>\n<div id=\"under_post_card2\" style=\"margin:0px;padding:0px;\">\n<div class=\"itnews under-post-card\" style=\"margin:10px 0px 0px;padding:0px;\">\n<b>最新新闻</b>：<br/>\r\n· <a href=\"https://news.cnblogs.com/n/708829/\" target=\"_blank\">360发现全球汽车操作系统多个高危漏洞：获宝马和系统商双重致谢（2021-12-12 00:21）</a><br/>\r\n· <a href=\"https://news.cnblogs.com/n/708830/\" target=\"_blank\">商汤科技回应被美国“拉黑”：强烈反对 相关指控毫无根据（2021-12-12 00:07）</a><br/>\r\n· <a href=\"https://news.cnblogs.com/n/708831/\" target=\"_blank\">苹果Apple Music年度榜单引热议：20年了还是周杰伦霸榜年度最热歌曲（2021-12-12 00:01）</a><br/>\r\n· <a href=\"https://news.cnblogs.com/n/708828/\" target=\"_blank\">硅谷直播带货元年：巨头集体下场，搬运中国模式，分阵营厮杀（2021-12-11 13:22）</a><br/>\r\n· <a href=\"https://news.cnblogs.com/n/708815/\" target=\"_blank\">苹果正在为旗下古典音乐服务Primephonic开发新音乐应（2021-12-11 11:46）</a><br/>\r\n» <a href=\"https://news.cnblogs.com/\" target=\"_blank\">更多新闻...</a>\n</div>\n</div>\n<div class=\"under-post-card\" id=\"HistoryToday\" style=\"margin:10px 0px 0px;padding:0px;\">\n</div>\n</div>\n</div>\n</div>\n<div id=\"sideBar\" style=\"margin:-15px 0px 0px;padding:0px 0px 0px 5px;\">\n<div id=\"sideBarMain\" style=\"margin:0px;padding:0px;\">\n<div class=\"newsItem\" id=\"sidebar_news\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n						公告\r\n					</h3>\n<div id=\"blog-news\" style=\"margin:0px;padding:0px;\">\n<div class=\"clockdiv\" style=\"margin:0px;padding:0px;\">\n</div>\n<div class=\"aplayer aplayer-withlist aplayer-arrow\" id=\"player\" style=\"margin:0px;padding:0px;font-family:Arial, Helvetica, sans-serif;background:#F5F5F5;\">\n<div class=\"aplayer-body\" style=\"margin:0px;padding:0px;\">\n<div class=\"aplayer-pic\" style=\"margin:0px;padding:0px;\">\n<div class=\"aplayer-button aplayer-play\" style=\"margin:0px -15px -15px 0px;padding:0px;background:rgba(0, 0, 0, 0.2);border:2px solid #FFFFFF;\">\n</div>\n</div>\n<div class=\"aplayer-info\" style=\"margin:0px 0px 0px 66px;padding:14px 7px 0px 2px;\">\n<div class=\"aplayer-music\" style=\"margin:0px 0px 13px 5px;padding:0px 0px 2px;\">\r\n										自强不息第一神曲 - 孟卫东\r\n									</div>\n<div class=\"aplayer-controller\" style=\"margin:0px;padding:0px;\">\n<div class=\"aplayer-bar-wrap\" style=\"margin:0px 0px 0px 5px;padding:4px 0px;\">\n<div class=\"aplayer-bar\" style=\"margin:0px;padding:0px;background:#CDCDCD;\">\n<div class=\"aplayer-loaded\" style=\"margin:0px;padding:0px;background:#AAAAAA;\">\n</div>\n<div class=\"aplayer-played\" style=\"margin:0px;padding:0px;background:#F5F5F5;\">\n<span class=\"aplayer-thumb\"></span>\n</div>\n</div>\n</div>\n<div class=\"aplayer-time aplayer-time-narrow\" style=\"margin:0px;padding:0px;color:#999999;font-size:11px;\">\n<span class=\"aplayer-time-inner\" style=\"vertical-align:middle;\"><span class=\"aplayer-ptime\">00:00</span> / <span class=\"aplayer-dtime\">00:00</span> </span>\n<div class=\"aplayer-volume-wrap\" style=\"margin:0px 0px 0px 3px;padding:0px;\">\n<div class=\"aplayer-volume-bar-wrap\" style=\"margin:0px;padding:0px;\">\n<div class=\"aplayer-volume-bar\" style=\"margin:0px;padding:0px;background:#AAAAAA;\">\n<div class=\"aplayer-volume\" style=\"margin:0px;padding:0px;background:#F5F5F5;\">\n</div>\n</div>\n</div>\n</div>\r\n \r\n										</div>\n</div>\n</div>\n<div class=\"aplayer-notice\" style=\"margin:0px;padding:5px 10px;font-size:12px;background-color:#F4F4F5;color:#909399;\">\n</div>\n</div>\n<div class=\"aplayer-list\" style=\"margin:0px;padding:0px;\">\n<ol>\n<li class=\"aplayer-list-light\" style=\"font-size:12px;background:#E9E9E9;\">\n<span class=\"aplayer-list-cur\" style=\"background-color:#F5F5F5;\"></span><span class=\"aplayer-list-index\" style=\"color:#666666;\">1</span> <span class=\"aplayer-list-title\">自强不息第一神曲</span><span class=\"aplayer-list-author\" style=\"color:#666666;\">孟卫东</span>\n</li>\n<li style=\"font-size:12px;\">\n<span class=\"aplayer-list-index\" style=\"color:#666666;\">2</span> <span class=\"aplayer-list-title\">处处傻（翻自杨千嬅)</span><span class=\"aplayer-list-author\" style=\"color:#666666;\">花玲</span>\n</li>\n<li style=\"font-size:12px;\">\n<span class=\"aplayer-list-index\" style=\"color:#666666;\">3</span> <span class=\"aplayer-list-title\">itachi 鼬</span><span class=\"aplayer-list-author\" style=\"color:#666666;\">emoshinobi</span>\n</li>\n<li style=\"font-size:12px;\">\n<span class=\"aplayer-list-index\" style=\"color:#666666;\">4</span> <span class=\"aplayer-list-title\">変態乳牛</span><span class=\"aplayer-list-author\" style=\"color:#666666;\">Tom-H@ck</span>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"profile_block\" style=\"margin:5px 0px 0px;padding:0px;\">\r\n							昵称： <a href=\"https://home.cnblogs.com/u/frankiedyz/\">酒冽</a><br/>\r\n园龄： <a href=\"https://home.cnblogs.com/u/frankiedyz/\">4年2个月</a><br/>\r\n粉丝： <a href=\"https://home.cnblogs.com/u/frankiedyz/followers/\">1</a><br/>\r\n关注： <a href=\"https://home.cnblogs.com/u/frankiedyz/followees/\">1</a>\n<div id=\"p_b_follow\" style=\"margin:0px;padding:0px;\">\n<a>+加关注</a>\n</div>\n</div>\n</div>\n</div>\n<div id=\"blog-calendar\" style=\"margin:0px 0px 35px;padding:0px 0px 5px;border:1px solid #EDEDED;\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"Cal ke-zeroborder\" id=\"blogCalendar\" style=\"margin:0px;padding:0px;width:228px;border:none;color:#666666;\">\n<tbody>\n<tr>\n<td colspan=\"7\" style=\'font-family:\"\'>\n<table border=\"0\" cellspacing=\"0\" class=\"CalTitle ke-zeroborder\" style=\"margin:0px;padding:5px 0px;width:228px;background:#6293BB;height:25px;text-align:center;font-size:14px;font-weight:bold;color:#FFFFFF;\">\n<tbody>\n<tr>\n<td class=\"CalNextPrev\" style=\'color:#5E5F63;font-family:\"background:#F8F8F8 !important;border:0px !important;\'>\n<a>&lt;</a>\n</td>\n<td align=\"center\" style=\'color:#5E5F63;font-family:\"background:#F8F8F8 !important;border:0px !important;\'>\r\n													2021年12月\r\n												</td>\n<td align=\"right\" class=\"CalNextPrev\" style=\'color:#5E5F63;font-family:\"background:#F8F8F8 !important;border:0px !important;\'>\n<a>&gt;</a>\n</td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr>\n<th align=\"center\" class=\"CalDayHeader\" style=\"background:#F8F8F8;font-weight:100;color:#5E5F63;font-size:12px;\">\r\n									日\r\n								</th>\n<th align=\"center\" class=\"CalDayHeader\" style=\"background:#F8F8F8;font-weight:100;color:#5E5F63;font-size:12px;\">\r\n									一\r\n								</th>\n<th align=\"center\" class=\"CalDayHeader\" style=\"background:#F8F8F8;font-weight:100;color:#5E5F63;font-size:12px;\">\r\n									二\r\n								</th>\n<th align=\"center\" class=\"CalDayHeader\" style=\"background:#F8F8F8;font-weight:100;color:#5E5F63;font-size:12px;\">\r\n									三\r\n								</th>\n<th align=\"center\" class=\"CalDayHeader\" style=\"background:#F8F8F8;font-weight:100;color:#5E5F63;font-size:12px;\">\r\n									四\r\n								</th>\n<th align=\"center\" class=\"CalDayHeader\" style=\"background:#F8F8F8;font-weight:100;color:#5E5F63;font-size:12px;\">\r\n									五\r\n								</th>\n<th align=\"center\" class=\"CalDayHeader\" style=\"background:#F8F8F8;font-weight:100;color:#5E5F63;font-size:12px;\">\r\n									六\r\n								</th>\n</tr>\n<tr>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									28\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									29\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									30\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									1\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									2\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\n<a href=\"https://www.cnblogs.com/frankiedyz/archive/2021/12/03.html\"><u>3</u></a>\n</td>\n<td align=\"center\" class=\"CalWeekendDay\" style=\'font-family:\"\'>\r\n									4\r\n								</td>\n</tr>\n<tr>\n<td align=\"center\" class=\"CalWeekendDay\" style=\'font-family:\"\'>\r\n									5\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									6\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\n<a href=\"https://www.cnblogs.com/frankiedyz/archive/2021/12/07.html\"><u>7</u></a>\n</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									8\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									9\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									10\r\n								</td>\n<td align=\"center\" class=\"CalWeekendDay\" style=\'font-family:\"\'>\n<a href=\"https://www.cnblogs.com/frankiedyz/archive/2021/12/11.html\"><u>11</u></a>\n</td>\n</tr>\n<tr>\n<td align=\"center\" class=\"CalTodayDay\" style=\'color:#FFFFFF;font-weight:bold;font-family:\"background:#3671A5 !important;\'>\r\n									12\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									13\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									14\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									15\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									16\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									17\r\n								</td>\n<td align=\"center\" class=\"CalWeekendDay\" style=\'font-family:\"\'>\r\n									18\r\n								</td>\n</tr>\n<tr>\n<td align=\"center\" class=\"CalWeekendDay\" style=\'font-family:\"\'>\r\n									19\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									20\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									21\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									22\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									23\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									24\r\n								</td>\n<td align=\"center\" class=\"CalWeekendDay\" style=\'font-family:\"\'>\r\n									25\r\n								</td>\n</tr>\n<tr>\n<td align=\"center\" class=\"CalWeekendDay\" style=\'font-family:\"\'>\r\n									26\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									27\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									28\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									29\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									30\r\n								</td>\n<td align=\"center\" class=\"\" style=\'font-family:\"\'>\r\n									31\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									1\r\n								</td>\n</tr>\n<tr>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									2\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									3\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									4\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									5\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									6\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									7\r\n								</td>\n<td align=\"center\" class=\"CalOtherMonthDay\" style=\'color:#CCCCCC;font-family:\"\'>\r\n									8\r\n								</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"leftcontentcontainer\" style=\"margin:0px;padding:0px;\">\n<div id=\"blog-sidecolumn\" style=\"margin:0px;padding:0px;\">\n<div class=\"sidebar-block\" id=\"sidebar_search\" style=\"margin:0px;padding:0px;\">\n<div class=\"mySearch\" id=\"sidebar_search\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									搜索\r\n								</h3>\n<div id=\"sidebar_search_box\" style=\"margin:0px;padding:0px;\">\n<div class=\"div_my_zzk\" id=\"widget_my_zzk\" style=\"margin:10px 0px 5px;padding:0px;\">\r\n										 \r\n									</div>\n<div class=\"div_my_zzk\" id=\"widget_my_google\" style=\"margin:10px 0px 5px;padding:0px;\">\r\n										 \r\n									</div>\n</div>\n</div>\n</div>\n<div class=\"sidebar-block\" id=\"sidebar_shortcut\" style=\"margin:0px;padding:0px;\">\n<div class=\"catListLink\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									常用链接\r\n								</h3>\n<ul>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/p/\">我的随笔</a>\n</li>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/MyComments.html\">我的评论</a>\n</li>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/OtherPosts.html\">我的参与</a>\n</li>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/RecentComments.html\">最新评论</a>\n</li>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/tag/\">我的标签</a>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sidebar-block\" id=\"sidebar_toptags\" style=\"margin:0px;padding:0px;\">\n<div class=\"catListTag\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									我的标签\r\n								</h3>\n<ul>\n<li style=\"background:red;font-size:9px;color:#FFFFFF;\">\n<a href=\"https://www.cnblogs.com/frankiedyz/tag/Java/\">Java<span class=\"tag-count\">(4)</span></a>\n</li>\n<li style=\"background:red;font-size:9px;color:#FFFFFF;\">\n<a href=\"https://www.cnblogs.com/frankiedyz/tag/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/\">并发编程<span class=\"tag-count\">(4)</span></a>\n</li>\n<li style=\"background:red;font-size:9px;color:#FFFFFF;\">\n<a href=\"https://www.cnblogs.com/frankiedyz/tag/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/\">源码阅读<span class=\"tag-count\">(3)</span></a>\n</li>\n<li style=\"background:red;font-size:9px;color:#FFFFFF;\">\n<a href=\"https://www.cnblogs.com/frankiedyz/tag/%E9%A2%98%E8%A7%A3/\">题解<span class=\"tag-count\">(1)</span></a>\n</li>\n<li style=\"background:red;font-size:9px;color:#FFFFFF;\">\n<a href=\"https://www.cnblogs.com/frankiedyz/tag/%E8%B5%84%E6%BA%90/\">资源<span class=\"tag-count\">(1)</span></a>\n</li>\n<li style=\"background:red;font-size:9px;color:#FFFFFF;\">\n<a href=\"https://www.cnblogs.com/frankiedyz/tag/%E4%BF%AE%E8%BA%AB/\">修身<span class=\"tag-count\">(1)</span></a>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"sidebar_categories\" style=\"margin:0px;padding:0px;\">\n<div class=\"catListPostCategory sidebar-block\" id=\"sidebar_postcategory\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									随笔分类 <span style=\"font-size:11px;font-weight:normal;\">(5)</span>\n</h3>\n<ul>\n<li>\n<a class=\"category-item-link\" href=\"https://www.cnblogs.com/frankiedyz/category/2075327.html\" target=\"\">JUC源码阅读(3)</a>\n</li>\n<li>\n<a class=\"category-item-link\" href=\"https://www.cnblogs.com/frankiedyz/category/2073546.html\" target=\"\">并发编程(2)</a>\n</li>\n</ul>\n</div>\n<div class=\"catListPostArchive sidebar-block\" id=\"sidebar_postarchive\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									随笔档案 <span style=\"font-size:11px;font-weight:normal;\">(4)</span>\n</h3>\n<ul>\n<li>\n<a class=\"category-item-link\" href=\"https://www.cnblogs.com/frankiedyz/archive/2021/12.html\" target=\"\">2021年12月(4)</a>\n</li>\n</ul>\n</div>\n<div class=\"catListArticleCategory sidebar-block\" id=\"sidebar_articlecategory\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									文章分类 <span style=\"font-size:11px;font-weight:normal;\">(1)</span>\n</h3>\n<ul>\n<li>\n<a class=\"category-item-link\" href=\"https://www.cnblogs.com/frankiedyz/category/2069727.html\" target=\"\">内功修炼(1)</a>\n</li>\n</ul>\n</div>\n<div class=\"catListArticleArchive sidebar-block\" id=\"sidebar_articlearchive\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									文章档案 <span style=\"font-size:11px;font-weight:normal;\">(1)</span>\n</h3>\n<ul>\n<li>\n<a class=\"category-item-link\" href=\"https://www.cnblogs.com/frankiedyz/archives/2021/11.html\" target=\"\">2021年11月(1)</a>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"sidebar-block\" id=\"sidebar_topviewedposts\" style=\"margin:0px;padding:0px;\">\n<div class=\"catListView\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									阅读排行榜\r\n								</h3>\n<div id=\"TopViewPostsBlock\" style=\"margin:0px;padding:0px;\">\n<ul>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15655865.html\">1. 全网最详细的ReentrantReadWriteLock源码剖析（万字长文）(228)</a>\n</li>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15639964.html\">2. 题解 | 条件变量实现数字的交替输出(56)</a>\n</li>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15673957.html\">3. 全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（一）AQS基础(32)</a>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sidebar-block\" id=\"sidebar_topcommentedposts\" style=\"margin:0px;padding:0px;\">\n<div class=\"catListFeedback\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									评论排行榜\r\n								</h3>\n<div id=\"TopFeedbackPostsBlock\" style=\"margin:0px;padding:0px;\">\n<ul>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15655865.html\">1. 全网最详细的ReentrantReadWriteLock源码剖析（万字长文）(3)</a>\n</li>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15673957.html\">2. 全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（一）AQS基础(1)</a>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sidebar-block\" id=\"sidebar_topdiggedposts\" style=\"margin:0px;padding:0px;\">\n<div id=\"topdigg_posts_wrap\" style=\"margin:0px;padding:0px;\">\n<div class=\"catListView\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n										推荐排行榜\r\n									</h3>\n<div id=\"TopDiggPostsBlock\" style=\"margin:0px;padding:0px;\">\n<ul>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15655865.html\">1. 全网最详细的ReentrantReadWriteLock源码剖析（万字长文）(2)</a>\n</li>\n<li>\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15673957.html\">2. 全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（一）AQS基础(1)</a>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sidebar-block\" id=\"sidebar_recentcomments\" style=\"margin:0px;padding:0px;\">\n<div class=\"catListComment\" style=\"margin:0px 0px 35px;padding:0px;background:transparent;\">\n<h3 class=\"catListTitle\" style=\"font-size:14px;font-family:inherit;color:inherit;\">\r\n									最新评论\r\n								</h3>\n<div class=\"RecentCommentBlock\" style=\"margin:0px;padding:0px;\">\n<ul>\n<li class=\"recent_comment_title\">\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15673957.html\">1. Re:全网最详细的AbstractQueuedSynchronizer(AQS)源码剖析（一）AQS基础</a>\n</li>\n<li class=\"recent_comment_body\">\n<p>\r\n												超级无敌阿姆斯特朗回旋炮赞！\r\n											</p>\n</li>\n<li class=\"recent_comment_author\" style=\"text-align:right;\">\r\n											--阿雯Charwen\r\n										</li>\n<li class=\"recent_comment_title\">\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15655865.html\">2. Re:全网最详细的ReentrantReadWriteLock源码剖析（万字长文）</a>\n</li>\n<li class=\"recent_comment_body\">\r\n											@阿雯Charwen 感谢支持...\r\n										</li>\n<li class=\"recent_comment_author\" style=\"text-align:right;\">\r\n											--酒冽\r\n										</li>\n<li class=\"recent_comment_title\">\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15655865.html\">3. Re:全网最详细的ReentrantReadWriteLock源码剖析（万字长文）</a>\n</li>\n<li class=\"recent_comment_body\">\n<p>\r\n												好的，朕知道了\r\n											</p>\n</li>\n<li class=\"recent_comment_author\" style=\"text-align:right;\">\r\n											--阿雯Charwen\r\n										</li>\n<li class=\"recent_comment_title\">\n<a href=\"https://www.cnblogs.com/frankiedyz/p/15655865.html\">4. Re:全网最详细的ReentrantReadWriteLock源码剖析（万字长文）</a>\n</li>\n<li class=\"recent_comment_body\">\n<p>\r\n												好久没有看到质量这么高的博客了！！！\r\n											</p>\n</li>\n<li class=\"recent_comment_author\" style=\"text-align:right;\">\r\n											--海杰Hute\r\n										</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"clear\" style=\"margin:0px;padding:0px;\">\n</div>\n</div>\n<div class=\"clear\" style=\"margin:0px;padding:0px;\">\n</div>\n<div id=\"footer\" style=\"margin:50px 0px 10px;padding:10px 0px 0px;color:#686868;text-align:center;\">\r\n		Copyright © 2021 酒冽<br/>\n<span id=\"poweredby\">Powered by .NET 6 on Kubernetes</span>\n</div>\n</div>\n<div id=\"page_end_html\" style=\'margin:0px;padding:0px;font-family:\"font-size:14px;\'>\n<div style=\"margin:0px;padding:0px;\">\n<div class=\"kanban\" id=\"kanban\" style=\"margin:0px;padding:0px;font-size:0px;\">\n<div class=\"kanban-tips\" style=\"margin:-20px 20px;padding:5px 10px;border:1px solid rgba(224, 186, 140, 0.62);background-color:rgba(236, 217, 188, 0.5);font-size:12px;color:#2D2DFD;\">\r\n				你都复制了些什么呀，转载要记得加上出处哦\r\n			</div>\n<div>\n<br/>\n</div>\n</div>\n</div>\n</div>', '0', '0', '0', '1', '1');

-- ----------------------------
-- Table structure for app01_article2tag
-- ----------------------------
DROP TABLE IF EXISTS `app01_article2tag`;
CREATE TABLE `app01_article2tag` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `app01_article2tag_article_id_tag_id_feac10bd_uniq` (`article_id`,`tag_id`),
  KEY `app01_article2tag_tag_id_d24dfcf8_fk_app01_tag_nid` (`tag_id`),
  CONSTRAINT `app01_article2tag_article_id_35c1561c_fk_app01_article_nid` FOREIGN KEY (`article_id`) REFERENCES `app01_article` (`nid`),
  CONSTRAINT `app01_article2tag_tag_id_d24dfcf8_fk_app01_tag_nid` FOREIGN KEY (`tag_id`) REFERENCES `app01_tag` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_article2tag
-- ----------------------------
INSERT INTO `app01_article2tag` VALUES ('1', '1', '1');
INSERT INTO `app01_article2tag` VALUES ('2', '2', '2');
INSERT INTO `app01_article2tag` VALUES ('3', '3', '3');
INSERT INTO `app01_article2tag` VALUES ('4', '6', '2');
INSERT INTO `app01_article2tag` VALUES ('5', '7', '2');

-- ----------------------------
-- Table structure for app01_articleupdown
-- ----------------------------
DROP TABLE IF EXISTS `app01_articleupdown`;
CREATE TABLE `app01_articleupdown` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `is_up` tinyint(1) NOT NULL,
  `article_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `app01_articleupdown_article_id_user_id_af54a7e2_uniq` (`article_id`,`user_id`),
  KEY `app01_articleupdown_user_id_dde3901c_fk_app01_userinfo_nid` (`user_id`),
  CONSTRAINT `app01_articleupdown_article_id_51964f38_fk_app01_article_nid` FOREIGN KEY (`article_id`) REFERENCES `app01_article` (`nid`),
  CONSTRAINT `app01_articleupdown_user_id_dde3901c_fk_app01_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `app01_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_articleupdown
-- ----------------------------
INSERT INTO `app01_articleupdown` VALUES ('1', '1', '4', '1');

-- ----------------------------
-- Table structure for app01_blog
-- ----------------------------
DROP TABLE IF EXISTS `app01_blog`;
CREATE TABLE `app01_blog` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(64) NOT NULL,
  `site_name` varchar(64) NOT NULL,
  `theme` varchar(32) NOT NULL,
  PRIMARY KEY (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_blog
-- ----------------------------
INSERT INTO `app01_blog` VALUES ('1', 'tangsai', 'tangsai', 'tangsai');
INSERT INTO `app01_blog` VALUES ('2', 'tingwei', 'tingwei', 'tingwei');
INSERT INTO `app01_blog` VALUES ('3', 'hallo', 'hallo', 'hallo');

-- ----------------------------
-- Table structure for app01_category
-- ----------------------------
DROP TABLE IF EXISTS `app01_category`;
CREATE TABLE `app01_category` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(32) NOT NULL,
  `blog_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `app01_category_blog_id_5f26cf92_fk_app01_blog_nid` (`blog_id`),
  CONSTRAINT `app01_category_blog_id_5f26cf92_fk_app01_blog_nid` FOREIGN KEY (`blog_id`) REFERENCES `app01_blog` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_category
-- ----------------------------
INSERT INTO `app01_category` VALUES ('1', '唐赛的分类一', '1');
INSERT INTO `app01_category` VALUES ('2', '唐赛的分类二', '1');
INSERT INTO `app01_category` VALUES ('3', '婷伟的分类一', '2');
INSERT INTO `app01_category` VALUES ('4', '婷伟的分类二', '2');

-- ----------------------------
-- Table structure for app01_comment
-- ----------------------------
DROP TABLE IF EXISTS `app01_comment`;
CREATE TABLE `app01_comment` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `content` varchar(255) NOT NULL,
  `create_time` datetime(6) NOT NULL,
  `article_id` int(11) NOT NULL,
  `parent_comment_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `app01_comment_article_id_2bf4f73b_fk_app01_article_nid` (`article_id`),
  KEY `app01_comment_parent_comment_id_6a8024a5_fk_app01_comment_nid` (`parent_comment_id`),
  KEY `app01_comment_user_id_7f913f03_fk_app01_userinfo_nid` (`user_id`),
  CONSTRAINT `app01_comment_article_id_2bf4f73b_fk_app01_article_nid` FOREIGN KEY (`article_id`) REFERENCES `app01_article` (`nid`),
  CONSTRAINT `app01_comment_parent_comment_id_6a8024a5_fk_app01_comment_nid` FOREIGN KEY (`parent_comment_id`) REFERENCES `app01_comment` (`nid`),
  CONSTRAINT `app01_comment_user_id_7f913f03_fk_app01_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `app01_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_comment
-- ----------------------------
INSERT INTO `app01_comment` VALUES ('1', '1111111111', '2021-12-10 00:25:26.983974', '1', null, '1');
INSERT INTO `app01_comment` VALUES ('2', '鹅鹅鹅鹅鹅', '2021-12-10 00:33:08.057219', '1', '1', '1');
INSERT INTO `app01_comment` VALUES ('3', '111111\n', '2021-12-10 00:37:20.956977', '1', '1', '1');
INSERT INTO `app01_comment` VALUES ('4', '过得好地方换肤大师广东佛山', '2021-12-10 00:50:47.280251', '1', null, '1');
INSERT INTO `app01_comment` VALUES ('5', '轨道射灯撒个傻瓜蛋撒', '2021-12-10 00:51:03.351465', '1', null, '1');
INSERT INTO `app01_comment` VALUES ('6', '@tangsai\n规范的范德萨更广泛的手动挡萨芬', '2021-12-10 00:51:14.562150', '1', null, '1');
INSERT INTO `app01_comment` VALUES ('7', '辅导员瑞特有任务', '2021-12-10 00:53:23.955490', '1', null, '1');
INSERT INTO `app01_comment` VALUES ('8', '好过分的话该发动机的', '2021-12-10 00:53:35.804498', '1', '7', '1');
INSERT INTO `app01_comment` VALUES ('9', '很反感的话该奋斗和规范的', '2021-12-10 00:53:55.411999', '1', '7', '1');

-- ----------------------------
-- Table structure for app01_log
-- ----------------------------
DROP TABLE IF EXISTS `app01_log`;
CREATE TABLE `app01_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ip` varchar(64) NOT NULL,
  `time` datetime(6) NOT NULL,
  `url` varchar(64) NOT NULL,
  `device` varchar(256) DEFAULT NULL,
  `platform` varchar(256) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_log
-- ----------------------------
INSERT INTO `app01_log` VALUES ('1', '10.10.10.174', '2021-12-15 13:36:05.000000', 'https://www.baidu.com', '31321', 'weiixn');

-- ----------------------------
-- Table structure for app01_swiper
-- ----------------------------
DROP TABLE IF EXISTS `app01_swiper`;
CREATE TABLE `app01_swiper` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `image` varchar(100) NOT NULL,
  `title` varchar(32) NOT NULL,
  `img_url` varchar(64) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_swiper
-- ----------------------------
INSERT INTO `app01_swiper` VALUES ('1', 'swiper_img/QQ浏览器截图20211205113709.png', '4234325', 'fsgdsfds');

-- ----------------------------
-- Table structure for app01_tag
-- ----------------------------
DROP TABLE IF EXISTS `app01_tag`;
CREATE TABLE `app01_tag` (
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(32) NOT NULL,
  `blog_id` int(11) NOT NULL,
  PRIMARY KEY (`nid`),
  KEY `app01_tag_blog_id_ce05dc18_fk_app01_blog_nid` (`blog_id`),
  CONSTRAINT `app01_tag_blog_id_ce05dc18_fk_app01_blog_nid` FOREIGN KEY (`blog_id`) REFERENCES `app01_blog` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_tag
-- ----------------------------
INSERT INTO `app01_tag` VALUES ('1', '1111', '1');
INSERT INTO `app01_tag` VALUES ('2', '124', '1');
INSERT INTO `app01_tag` VALUES ('3', '国际服', '1');
INSERT INTO `app01_tag` VALUES ('4', '黄金矿工框架', '2');
INSERT INTO `app01_tag` VALUES ('5', '聚合聚', '2');
INSERT INTO `app01_tag` VALUES ('6', '成功回访过', '3');

-- ----------------------------
-- Table structure for app01_userinfo
-- ----------------------------
DROP TABLE IF EXISTS `app01_userinfo`;
CREATE TABLE `app01_userinfo` (
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(150) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  `nid` int(11) NOT NULL AUTO_INCREMENT,
  `telephone` varchar(11) DEFAULT NULL,
  `avatar` varchar(100) NOT NULL,
  `create_time` datetime(6) NOT NULL,
  `blog_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `telephone` (`telephone`),
  UNIQUE KEY `blog_id` (`blog_id`),
  CONSTRAINT `app01_userinfo_blog_id_12858ea2_fk_app01_blog_nid` FOREIGN KEY (`blog_id`) REFERENCES `app01_blog` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_userinfo
-- ----------------------------
INSERT INTO `app01_userinfo` VALUES ('pbkdf2_sha256$260000$hEvGt5CDA4t9svkqpC4hgn$uwT7/SpBcMm+1FhY4AcKQpDTGXg8Gv+dK7lM6bOj1uM=', '2021-12-09 01:09:57.171831', '0', 'tangsai', '', '', '294168604@qq.com', '0', '1', '2021-11-22 01:07:08.000000', '1', '13524280695', 'avatars/QQ浏览器截图20211208163827.png', '2021-11-22 01:07:08.797379', '1');
INSERT INTO `app01_userinfo` VALUES ('pbkdf2_sha256$260000$Q4btyiladlO8HPjC2o97gi$54bDCHmVCLRjT+nhE1Wiod2R7VH7Pm8PRUo0OSdpTZo=', '2021-12-12 06:21:44.506879', '1', 'admin', '', '', '294168604@qq.com', '1', '1', '2021-11-23 14:57:13.757386', '2', null, 'avatars/default.png', '2021-11-23 14:57:14.328032', null);
INSERT INTO `app01_userinfo` VALUES ('pbkdf2_sha256$260000$BMzVO9EecQ0x9it9KOk5q2$pPyOKyKTJ/PA70OZOlO5wzgpiGOCMoFHzE5usIPNZ4Q=', null, '0', 'tingwei', '', '', '1294168604@qq.com', '0', '1', '2021-11-30 00:43:34.000000', '3', '15695485231', 'avatars/877318-20180425153356710-1116321211.png', '2021-11-30 00:43:34.473176', '2');
INSERT INTO `app01_userinfo` VALUES ('pbkdf2_sha256$260000$MAwqYfhRV1WUFreM1cOlRv$yXIdLREYxCxhX5P4vw729pMiPM+2Rg9W/PYujnuakq0=', null, '0', 'hallo', '', '', 'tangsai@shuinfo.com', '0', '1', '2021-11-30 00:44:17.000000', '4', '19564232561', 'avatars/QQ浏览器截图20211123090621.png', '2021-11-30 00:44:18.086722', '3');
INSERT INTO `app01_userinfo` VALUES ('pbkdf2_sha256$260000$ukYV6CsC6V414ZUkUxYCFg$nblg9p6oFq4HYNp22R6dPoSLrsgoZjFN70rmApN1QuM=', null, '0', 'xboy', '', '', '45134545@qq.com', '0', '1', '2021-12-05 02:46:57.604550', '5', null, 'avatars/QQ浏览器截图20211201130148.png', '2021-12-05 02:46:57.908363', null);

-- ----------------------------
-- Table structure for app01_userinfo_groups
-- ----------------------------
DROP TABLE IF EXISTS `app01_userinfo_groups`;
CREATE TABLE `app01_userinfo_groups` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `userinfo_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `app01_userinfo_groups_userinfo_id_group_id_48ba2aa6_uniq` (`userinfo_id`,`group_id`),
  KEY `app01_userinfo_groups_group_id_30b9b2c4_fk_auth_group_id` (`group_id`),
  CONSTRAINT `app01_userinfo_groups_group_id_30b9b2c4_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `app01_userinfo_groups_userinfo_id_04be482a_fk_app01_userinfo_nid` FOREIGN KEY (`userinfo_id`) REFERENCES `app01_userinfo` (`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_userinfo_groups
-- ----------------------------

-- ----------------------------
-- Table structure for app01_userinfo_user_permissions
-- ----------------------------
DROP TABLE IF EXISTS `app01_userinfo_user_permissions`;
CREATE TABLE `app01_userinfo_user_permissions` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `userinfo_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `app01_userinfo_user_perm_userinfo_id_permission_i_8bd06903_uniq` (`userinfo_id`,`permission_id`),
  KEY `app01_userinfo_user__permission_id_826033c9_fk_auth_perm` (`permission_id`),
  CONSTRAINT `app01_userinfo_user__permission_id_826033c9_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `app01_userinfo_user__userinfo_id_3a67a872_fk_app01_use` FOREIGN KEY (`userinfo_id`) REFERENCES `app01_userinfo` (`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of app01_userinfo_user_permissions
-- ----------------------------

-- ----------------------------
-- Table structure for auth_group
-- ----------------------------
DROP TABLE IF EXISTS `auth_group`;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of auth_group
-- ----------------------------

-- ----------------------------
-- Table structure for auth_group_permissions
-- ----------------------------
DROP TABLE IF EXISTS `auth_group_permissions`;
CREATE TABLE `auth_group_permissions` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of auth_group_permissions
-- ----------------------------

-- ----------------------------
-- Table structure for auth_permission
-- ----------------------------
DROP TABLE IF EXISTS `auth_permission`;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of auth_permission
-- ----------------------------
INSERT INTO `auth_permission` VALUES ('1', 'Can add log entry', '1', 'add_logentry');
INSERT INTO `auth_permission` VALUES ('2', 'Can change log entry', '1', 'change_logentry');
INSERT INTO `auth_permission` VALUES ('3', 'Can delete log entry', '1', 'delete_logentry');
INSERT INTO `auth_permission` VALUES ('4', 'Can view log entry', '1', 'view_logentry');
INSERT INTO `auth_permission` VALUES ('5', 'Can add permission', '2', 'add_permission');
INSERT INTO `auth_permission` VALUES ('6', 'Can change permission', '2', 'change_permission');
INSERT INTO `auth_permission` VALUES ('7', 'Can delete permission', '2', 'delete_permission');
INSERT INTO `auth_permission` VALUES ('8', 'Can view permission', '2', 'view_permission');
INSERT INTO `auth_permission` VALUES ('9', 'Can add group', '3', 'add_group');
INSERT INTO `auth_permission` VALUES ('10', 'Can change group', '3', 'change_group');
INSERT INTO `auth_permission` VALUES ('11', 'Can delete group', '3', 'delete_group');
INSERT INTO `auth_permission` VALUES ('12', 'Can view group', '3', 'view_group');
INSERT INTO `auth_permission` VALUES ('13', 'Can add content type', '4', 'add_contenttype');
INSERT INTO `auth_permission` VALUES ('14', 'Can change content type', '4', 'change_contenttype');
INSERT INTO `auth_permission` VALUES ('15', 'Can delete content type', '4', 'delete_contenttype');
INSERT INTO `auth_permission` VALUES ('16', 'Can view content type', '4', 'view_contenttype');
INSERT INTO `auth_permission` VALUES ('17', 'Can add session', '5', 'add_session');
INSERT INTO `auth_permission` VALUES ('18', 'Can change session', '5', 'change_session');
INSERT INTO `auth_permission` VALUES ('19', 'Can delete session', '5', 'delete_session');
INSERT INTO `auth_permission` VALUES ('20', 'Can view session', '5', 'view_session');
INSERT INTO `auth_permission` VALUES ('21', 'Can add user', '6', 'add_userinfo');
INSERT INTO `auth_permission` VALUES ('22', 'Can change user', '6', 'change_userinfo');
INSERT INTO `auth_permission` VALUES ('23', 'Can delete user', '6', 'delete_userinfo');
INSERT INTO `auth_permission` VALUES ('24', 'Can view user', '6', 'view_userinfo');
INSERT INTO `auth_permission` VALUES ('25', 'Can add article', '7', 'add_article');
INSERT INTO `auth_permission` VALUES ('26', 'Can change article', '7', 'change_article');
INSERT INTO `auth_permission` VALUES ('27', 'Can delete article', '7', 'delete_article');
INSERT INTO `auth_permission` VALUES ('28', 'Can view article', '7', 'view_article');
INSERT INTO `auth_permission` VALUES ('29', 'Can add blog', '8', 'add_blog');
INSERT INTO `auth_permission` VALUES ('30', 'Can change blog', '8', 'change_blog');
INSERT INTO `auth_permission` VALUES ('31', 'Can delete blog', '8', 'delete_blog');
INSERT INTO `auth_permission` VALUES ('32', 'Can view blog', '8', 'view_blog');
INSERT INTO `auth_permission` VALUES ('33', 'Can add tag', '9', 'add_tag');
INSERT INTO `auth_permission` VALUES ('34', 'Can change tag', '9', 'change_tag');
INSERT INTO `auth_permission` VALUES ('35', 'Can delete tag', '9', 'delete_tag');
INSERT INTO `auth_permission` VALUES ('36', 'Can view tag', '9', 'view_tag');
INSERT INTO `auth_permission` VALUES ('37', 'Can add comment', '10', 'add_comment');
INSERT INTO `auth_permission` VALUES ('38', 'Can change comment', '10', 'change_comment');
INSERT INTO `auth_permission` VALUES ('39', 'Can delete comment', '10', 'delete_comment');
INSERT INTO `auth_permission` VALUES ('40', 'Can view comment', '10', 'view_comment');
INSERT INTO `auth_permission` VALUES ('41', 'Can add category', '11', 'add_category');
INSERT INTO `auth_permission` VALUES ('42', 'Can change category', '11', 'change_category');
INSERT INTO `auth_permission` VALUES ('43', 'Can delete category', '11', 'delete_category');
INSERT INTO `auth_permission` VALUES ('44', 'Can view category', '11', 'view_category');
INSERT INTO `auth_permission` VALUES ('45', 'Can add article2 tag', '12', 'add_article2tag');
INSERT INTO `auth_permission` VALUES ('46', 'Can change article2 tag', '12', 'change_article2tag');
INSERT INTO `auth_permission` VALUES ('47', 'Can delete article2 tag', '12', 'delete_article2tag');
INSERT INTO `auth_permission` VALUES ('48', 'Can view article2 tag', '12', 'view_article2tag');
INSERT INTO `auth_permission` VALUES ('49', 'Can add article up down', '13', 'add_articleupdown');
INSERT INTO `auth_permission` VALUES ('50', 'Can change article up down', '13', 'change_articleupdown');
INSERT INTO `auth_permission` VALUES ('51', 'Can delete article up down', '13', 'delete_articleupdown');
INSERT INTO `auth_permission` VALUES ('52', 'Can view article up down', '13', 'view_articleupdown');
INSERT INTO `auth_permission` VALUES ('53', 'Can add log', '14', 'add_log');
INSERT INTO `auth_permission` VALUES ('54', 'Can change log', '14', 'change_log');
INSERT INTO `auth_permission` VALUES ('55', 'Can delete log', '14', 'delete_log');
INSERT INTO `auth_permission` VALUES ('56', 'Can view log', '14', 'view_log');
INSERT INTO `auth_permission` VALUES ('57', 'Can add swiper', '15', 'add_swiper');
INSERT INTO `auth_permission` VALUES ('58', 'Can change swiper', '15', 'change_swiper');
INSERT INTO `auth_permission` VALUES ('59', 'Can delete swiper', '15', 'delete_swiper');
INSERT INTO `auth_permission` VALUES ('60', 'Can view swiper', '15', 'view_swiper');

-- ----------------------------
-- Table structure for django_admin_log
-- ----------------------------
DROP TABLE IF EXISTS `django_admin_log`;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_app01_userinfo_nid` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_app01_userinfo_nid` FOREIGN KEY (`user_id`) REFERENCES `app01_userinfo` (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of django_admin_log
-- ----------------------------
INSERT INTO `django_admin_log` VALUES ('1', '2021-11-30 00:34:28.445738', '1', 'tangsai', '1', '[{\"added\": {}}]', '8', '2');
INSERT INTO `django_admin_log` VALUES ('2', '2021-11-30 00:34:40.648842', '2', 'tingwei', '1', '[{\"added\": {}}]', '8', '2');
INSERT INTO `django_admin_log` VALUES ('3', '2021-11-30 00:34:59.767373', '1', '唐赛的分类一', '1', '[{\"added\": {}}]', '11', '2');
INSERT INTO `django_admin_log` VALUES ('4', '2021-11-30 00:35:12.829676', '2', '唐赛的分类二', '1', '[{\"added\": {}}]', '11', '2');
INSERT INTO `django_admin_log` VALUES ('5', '2021-11-30 00:35:32.478307', '3', '婷伟的分类一', '1', '[{\"added\": {}}]', '11', '2');
INSERT INTO `django_admin_log` VALUES ('6', '2021-11-30 00:35:43.271192', '4', '婷伟的分类二', '1', '[{\"added\": {}}]', '11', '2');
INSERT INTO `django_admin_log` VALUES ('7', '2021-11-30 00:37:37.067523', '1', '多任务学习中的数据分布问题(一)', '1', '[{\"added\": {}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('8', '2021-11-30 00:38:14.341473', '2', 'Yarp 让系统内调度更灵活', '1', '[{\"added\": {}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('9', '2021-11-30 00:39:03.018369', '3', 'Qt Creator 源码学习笔记03，大型项目如何管理工程', '1', '[{\"added\": {}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('10', '2021-11-30 00:42:04.520933', '3', 'hallo', '1', '[{\"added\": {}}]', '8', '2');
INSERT INTO `django_admin_log` VALUES ('11', '2021-11-30 00:45:22.431665', '4', 'python之元编程', '1', '[{\"added\": {}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('12', '2021-11-30 00:45:58.183539', '5', 'Go语言核心36讲（Go语言实战与应用十七）--学习笔记', '1', '[{\"added\": {}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('13', '2021-11-30 00:46:34.420800', '6', '联盛德 HLK-W806 (五): W801开发板上手报告', '1', '[{\"added\": {}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('14', '2021-12-05 07:03:23.334515', '1', 'tangsai', '2', '[{\"changed\": {\"fields\": [\"Telephone\", \"Blog\"]}}]', '6', '2');
INSERT INTO `django_admin_log` VALUES ('15', '2021-12-05 07:03:36.774646', '3', 'tingwei', '2', '[{\"changed\": {\"fields\": [\"Telephone\", \"Blog\"]}}]', '6', '2');
INSERT INTO `django_admin_log` VALUES ('16', '2021-12-05 07:04:01.120271', '4', 'hallo', '2', '[{\"changed\": {\"fields\": [\"Telephone\", \"Blog\"]}}]', '6', '2');
INSERT INTO `django_admin_log` VALUES ('17', '2021-12-05 08:00:20.438767', '1', '1111', '1', '[{\"added\": {}}]', '9', '2');
INSERT INTO `django_admin_log` VALUES ('18', '2021-12-05 08:00:34.961601', '2', '124', '1', '[{\"added\": {}}]', '9', '2');
INSERT INTO `django_admin_log` VALUES ('19', '2021-12-05 08:00:43.766759', '3', '国际服', '1', '[{\"added\": {}}]', '9', '2');
INSERT INTO `django_admin_log` VALUES ('20', '2021-12-05 08:00:52.824572', '4', '黄金矿工框架', '1', '[{\"added\": {}}]', '9', '2');
INSERT INTO `django_admin_log` VALUES ('21', '2021-12-05 08:00:59.577825', '5', '聚合聚', '1', '[{\"added\": {}}]', '9', '2');
INSERT INTO `django_admin_log` VALUES ('22', '2021-12-05 08:01:06.193448', '6', '成功回访过', '1', '[{\"added\": {}}]', '9', '2');
INSERT INTO `django_admin_log` VALUES ('23', '2021-12-05 08:01:34.687153', '1', '多任务学习中的数据分布问题(一)---1111', '1', '[{\"added\": {}}]', '12', '2');
INSERT INTO `django_admin_log` VALUES ('24', '2021-12-05 08:01:47.686896', '2', 'Yarp 让系统内调度更灵活---124', '1', '[{\"added\": {}}]', '12', '2');
INSERT INTO `django_admin_log` VALUES ('25', '2021-12-05 08:02:09.842380', '3', 'Qt Creator 源码学习笔记03，大型项目如何管理工程---国际服', '1', '[{\"added\": {}}]', '12', '2');
INSERT INTO `django_admin_log` VALUES ('26', '2021-12-05 08:02:19.777657', '4', '联盛德 HLK-W806 (五): W801开发板上手报告---124', '1', '[{\"added\": {}}]', '12', '2');
INSERT INTO `django_admin_log` VALUES ('27', '2021-12-07 14:17:19.380249', '6', '联盛德 HLK-W806 (五): W801开发板上手报告', '2', '[{\"changed\": {\"fields\": [\"Content\"]}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('28', '2021-12-07 14:18:21.039896', '5', 'Go语言核心36讲（Go语言实战与应用十七）--学习笔记', '2', '[{\"changed\": {\"fields\": [\"Content\"]}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('29', '2021-12-07 14:18:44.910223', '4', 'python之元编程', '2', '[{\"changed\": {\"fields\": [\"Content\"]}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('30', '2021-12-07 14:19:07.811694', '3', 'Qt Creator 源码学习笔记03，大型项目如何管理工程', '2', '[{\"changed\": {\"fields\": [\"Content\"]}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('31', '2021-12-07 14:19:31.451955', '2', 'Yarp 让系统内调度更灵活', '2', '[{\"changed\": {\"fields\": [\"Content\"]}}]', '7', '2');
INSERT INTO `django_admin_log` VALUES ('32', '2021-12-07 14:19:51.978739', '1', '多任务学习中的数据分布问题(一)', '2', '[{\"changed\": {\"fields\": [\"Content\"]}}]', '7', '2');

-- ----------------------------
-- Table structure for django_content_type
-- ----------------------------
DROP TABLE IF EXISTS `django_content_type`;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of django_content_type
-- ----------------------------
INSERT INTO `django_content_type` VALUES ('1', 'admin', 'logentry');
INSERT INTO `django_content_type` VALUES ('7', 'app01', 'article');
INSERT INTO `django_content_type` VALUES ('12', 'app01', 'article2tag');
INSERT INTO `django_content_type` VALUES ('13', 'app01', 'articleupdown');
INSERT INTO `django_content_type` VALUES ('8', 'app01', 'blog');
INSERT INTO `django_content_type` VALUES ('11', 'app01', 'category');
INSERT INTO `django_content_type` VALUES ('10', 'app01', 'comment');
INSERT INTO `django_content_type` VALUES ('14', 'app01', 'log');
INSERT INTO `django_content_type` VALUES ('15', 'app01', 'swiper');
INSERT INTO `django_content_type` VALUES ('9', 'app01', 'tag');
INSERT INTO `django_content_type` VALUES ('6', 'app01', 'userinfo');
INSERT INTO `django_content_type` VALUES ('3', 'auth', 'group');
INSERT INTO `django_content_type` VALUES ('2', 'auth', 'permission');
INSERT INTO `django_content_type` VALUES ('4', 'contenttypes', 'contenttype');
INSERT INTO `django_content_type` VALUES ('5', 'sessions', 'session');

-- ----------------------------
-- Table structure for django_migrations
-- ----------------------------
DROP TABLE IF EXISTS `django_migrations`;
CREATE TABLE `django_migrations` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of django_migrations
-- ----------------------------
INSERT INTO `django_migrations` VALUES ('1', 'contenttypes', '0001_initial', '2021-11-21 12:39:06.906497');
INSERT INTO `django_migrations` VALUES ('2', 'contenttypes', '0002_remove_content_type_name', '2021-11-21 12:39:07.051126');
INSERT INTO `django_migrations` VALUES ('3', 'auth', '0001_initial', '2021-11-21 12:39:07.299832');
INSERT INTO `django_migrations` VALUES ('4', 'auth', '0002_alter_permission_name_max_length', '2021-11-21 12:39:07.350755');
INSERT INTO `django_migrations` VALUES ('5', 'auth', '0003_alter_user_email_max_length', '2021-11-21 12:39:07.362465');
INSERT INTO `django_migrations` VALUES ('6', 'auth', '0004_alter_user_username_opts', '2021-11-21 12:39:07.373098');
INSERT INTO `django_migrations` VALUES ('7', 'auth', '0005_alter_user_last_login_null', '2021-11-21 12:39:07.383848');
INSERT INTO `django_migrations` VALUES ('8', 'auth', '0006_require_contenttypes_0002', '2021-11-21 12:39:07.388774');
INSERT INTO `django_migrations` VALUES ('9', 'auth', '0007_alter_validators_add_error_messages', '2021-11-21 12:39:07.398767');
INSERT INTO `django_migrations` VALUES ('10', 'auth', '0008_alter_user_username_max_length', '2021-11-21 12:39:07.413757');
INSERT INTO `django_migrations` VALUES ('11', 'auth', '0009_alter_user_last_name_max_length', '2021-11-21 12:39:07.426748');
INSERT INTO `django_migrations` VALUES ('12', 'auth', '0010_alter_group_name_max_length', '2021-11-21 12:39:07.468458');
INSERT INTO `django_migrations` VALUES ('13', 'auth', '0011_update_proxy_permissions', '2021-11-21 12:39:07.479447');
INSERT INTO `django_migrations` VALUES ('14', 'auth', '0012_alter_user_first_name_max_length', '2021-11-21 12:39:07.490439');
INSERT INTO `django_migrations` VALUES ('15', 'app01', '0001_initial', '2021-11-21 12:39:08.489688');
INSERT INTO `django_migrations` VALUES ('16', 'admin', '0001_initial', '2021-11-21 12:39:08.599619');
INSERT INTO `django_migrations` VALUES ('17', 'admin', '0002_logentry_remove_auto_add', '2021-11-21 12:39:08.618606');
INSERT INTO `django_migrations` VALUES ('18', 'admin', '0003_logentry_add_action_flag_choices', '2021-11-21 12:39:08.636594');
INSERT INTO `django_migrations` VALUES ('19', 'sessions', '0001_initial', '2021-11-21 12:39:08.689584');
INSERT INTO `django_migrations` VALUES ('20', 'app01', '0002_log', '2021-12-12 03:24:09.000265');
INSERT INTO `django_migrations` VALUES ('21', 'app01', '0003_alter_userinfo_is_active', '2021-12-12 05:59:52.917798');
INSERT INTO `django_migrations` VALUES ('22', 'app01', '0004_alter_userinfo_is_active', '2021-12-12 06:01:56.606874');
INSERT INTO `django_migrations` VALUES ('23', 'app01', '0005_swiper', '2021-12-12 07:13:47.446572');

-- ----------------------------
-- Table structure for django_session
-- ----------------------------
DROP TABLE IF EXISTS `django_session`;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of django_session
-- ----------------------------
INSERT INTO `django_session` VALUES ('2r1l27i09nabs80t0zfi3tk7vm8xk6zq', 'eyJjb2RlIjoiNFNtNG0ifQ:1mpAwm:vY9Cd1_CFaGRftDCHg6ayGIq9r1LjvPE8j8Qpj__JMQ', '2021-12-06 15:09:32.021426');
INSERT INTO `django_session` VALUES ('au6uc633w8r135xczviqbgh2pu1y8vv6', '.eJxVjMsOwiAQRf-FtSFAebp07zeQYRikaiAp7cr479qkC93ec859sQjbWuM2aIlzZmem2Ol3S4APajvId2i3zrG3dZkT3xV-0MGvPdPzcrh_BxVG_dba5yScEto5D-BCCFKCT8KUVIqbyBllQzYULFoxSUQryXgyVis0JST2_gDJKDdh:1mpXFa:adMqy1GMqDHv16eeyjgl9OAI7hlEbZVRpznRzmaFcC4', '2021-12-07 14:58:26.105989');
INSERT INTO `django_session` VALUES ('nqeippuupt9wtzye9yiuwol88av57f60', '.eJxVjMsOwiAQRf-FtSFAebp07zeQYRikaiAp7cr479qkC93ec859sQjbWuM2aIlzZmem2Ol3S4APajvId2i3zrG3dZkT3xV-0MGvPdPzcrh_BxVG_dba5yScEto5D-BCCFKCT8KUVIqbyBllQzYULFoxSUQryXgyVis0JST2_gDJKDdh:1mpXFZ:Otxj1e8QY0d4_9_x0KYVWy8vAp8UdvsGADYRTLVBpZI', '2021-12-07 14:58:25.690247');
INSERT INTO `django_session` VALUES ('qoe4i78rlmkftcd7p9x9jdnki3qxazby', '.eJxVjDsOwjAQBe_iGlm24y8lTSrOEK3XaxxAsRQnDYi7k0hp0s7Me1-GNRG7MtFX_2EXNsC6lGFtNA9j2rg6swj4omkX6QnTo3Ks0zKPke8JP2zj9-30fTva00GBVra19ikKp4R2zgO4EIKU4KMwOebsOnJG2ZAMBYtWdBLRSjKejNUKTQ6R_f6w5juC:1mwIEy:NLV1ke-MYVuIKKJo2kXs6GmvvbGMgEBW48uCY8z6RbI', '2021-12-26 06:21:44.510707');
